//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-19324607
// Cuda compilation tools, release 7.0, V7.0.27
// Based on LLVM 3.4svn
//

.version 4.2
.target sm_50
.address_size 64

	// .weak	cudaMalloc
.global .align 4 .b8 normalmatrix[64];
.global .align 8 .b8 eye[12];
.global .align 4 .b8 U[12];
.global .align 4 .b8 V[12];
.global .align 4 .b8 W[12];
.global .align 4 .b8 bad_color[12];
.global .align 4 .f32 scene_epsilon;
.global .align 1 .b8 output_buffer[1];
.global .align 1 .b8 output_buffer_nrm[1];
.global .align 1 .b8 output_buffer_depth[1];
.global .align 1 .b8 output_buffer_world[1];
.global .align 8 .b8 top_object[4];
.global .align 4 .u32 radiance_ray_type;
.global .align 8 .b8 launch_index[8];
.global .align 8 .b8 launch_dim[8];
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 4 .f32 time_view_scale = 0f358637BD;
.global .align 4 .b8 _ZN21rti_internal_typeinfo12normalmatrixE[8] = {82, 97, 121, 0, 64, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3eyeE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1UE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1VE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1WE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9bad_colorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13scene_epsilonE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10top_objectE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo17radiance_ray_typeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12launch_indexE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10launch_dimE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo15time_view_scaleE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12normalmatrixE[10] = {77, 97, 116, 114, 105, 120, 52, 120, 52, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3eyeE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename1UE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename1VE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename1WE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9bad_colorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename13scene_epsilonE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10top_objectE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename17radiance_ray_typeE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12launch_indexE[6] = {117, 105, 110, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10launch_dimE[6] = {117, 105, 110, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename15time_view_scaleE[6] = {102, 108, 111, 97, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum12normalmatrixE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3eyeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1UE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1VE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1WE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9bad_colorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13scene_epsilonE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10top_objectE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum17radiance_ray_typeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12launch_indexE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10launch_dimE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum15time_view_scaleE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic12normalmatrixE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic3eyeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1UE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1VE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1WE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9bad_colorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic13scene_epsilonE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10top_objectE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic17radiance_ray_typeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12launch_indexE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic10launch_dimE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic15time_view_scaleE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12normalmatrixE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3eyeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1UE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1VE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1WE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9bad_colorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13scene_epsilonE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10top_objectE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation17radiance_ray_typeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12launch_indexE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10launch_dimE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation15time_view_scaleE[1];
.global .align 1 .b8 $str[47] = {67, 97, 117, 103, 104, 116, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 32, 48, 120, 37, 88, 32, 97, 116, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 40, 37, 100, 44, 37, 100, 41, 10, 0};

.weak .func  (.param .b32 func_retval0) cudaMalloc(
	.param .b64 cudaMalloc_param_0,
	.param .b64 cudaMalloc_param_1
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaFuncGetAttributes
.weak .func  (.param .b32 func_retval0) cudaFuncGetAttributes(
	.param .b64 cudaFuncGetAttributes_param_0,
	.param .b64 cudaFuncGetAttributes_param_1
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaDeviceGetAttribute
.weak .func  (.param .b32 func_retval0) cudaDeviceGetAttribute(
	.param .b64 cudaDeviceGetAttribute_param_0,
	.param .b32 cudaDeviceGetAttribute_param_1,
	.param .b32 cudaDeviceGetAttribute_param_2
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaGetDevice
.weak .func  (.param .b32 func_retval0) cudaGetDevice(
	.param .b64 cudaGetDevice_param_0
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaOccupancyMaxActiveBlocksPerMultiprocessor
.weak .func  (.param .b32 func_retval0) cudaOccupancyMaxActiveBlocksPerMultiprocessor(
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_0,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_1,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_2,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_3
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags
.weak .func  (.param .b32 func_retval0) cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_0,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_1,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_2,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_3,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_4
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .globl	_Z14pinhole_camerav
.visible .entry _Z14pinhole_camerav(

)
{
	.local .align 8 .b8 	__local_depot6[48];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .f32 	%f<77>;
	.reg .s32 	%r<22>;
	.reg .s64 	%rd<32>;


	mov.u64 	%rd31, __local_depot6;
	cvta.local.u64 	%SP, %rd31;
	ld.global.v2.u32 	{%r12, %r13}, [launch_index];
	cvt.rn.f32.u32	%f9, %r12;
	cvt.rn.f32.u32	%f10, %r13;
	ld.global.v2.u32 	{%r16, %r17}, [launch_dim];
	cvt.rn.f32.u32	%f11, %r16;
	cvt.rn.f32.u32	%f12, %r17;
	div.approx.ftz.f32 	%f13, %f9, %f11;
	div.approx.ftz.f32 	%f14, %f10, %f12;
	fma.rn.ftz.f32 	%f15, %f13, 0f40000000, 0fBF800000;
	fma.rn.ftz.f32 	%f16, %f14, 0f40000000, 0fBF800000;
	ld.global.v2.f32 	{%f17, %f18}, [eye];
	ld.global.f32 	%f3, [eye+8];
	ld.global.f32 	%f19, [U];
	ld.global.f32 	%f20, [U+4];
	ld.global.f32 	%f21, [U+8];
	ld.global.f32 	%f22, [V];
	mul.ftz.f32 	%f23, %f16, %f22;
	ld.global.f32 	%f24, [V+4];
	mul.ftz.f32 	%f25, %f16, %f24;
	ld.global.f32 	%f26, [V+8];
	mul.ftz.f32 	%f27, %f16, %f26;
	fma.rn.ftz.f32 	%f28, %f15, %f19, %f23;
	fma.rn.ftz.f32 	%f29, %f15, %f20, %f25;
	fma.rn.ftz.f32 	%f30, %f15, %f21, %f27;
	ld.global.f32 	%f31, [W];
	add.ftz.f32 	%f32, %f28, %f31;
	ld.global.f32 	%f33, [W+4];
	add.ftz.f32 	%f34, %f29, %f33;
	ld.global.f32 	%f35, [W+8];
	add.ftz.f32 	%f36, %f30, %f35;
	ld.global.f32 	%f37, [normalmatrix];
	fma.rn.ftz.f32 	%f38, %f32, %f37, 0f00000000;
	ld.global.f32 	%f39, [normalmatrix+16];
	fma.rn.ftz.f32 	%f40, %f34, %f39, %f38;
	ld.global.f32 	%f41, [normalmatrix+32];
	fma.rn.ftz.f32 	%f42, %f36, %f41, %f40;
	ld.global.f32 	%f43, [normalmatrix+48];
	add.ftz.f32 	%f44, %f42, %f43;
	ld.global.f32 	%f45, [normalmatrix+4];
	fma.rn.ftz.f32 	%f46, %f32, %f45, 0f00000000;
	ld.global.f32 	%f47, [normalmatrix+20];
	fma.rn.ftz.f32 	%f48, %f34, %f47, %f46;
	ld.global.f32 	%f49, [normalmatrix+36];
	fma.rn.ftz.f32 	%f50, %f36, %f49, %f48;
	ld.global.f32 	%f51, [normalmatrix+52];
	add.ftz.f32 	%f52, %f50, %f51;
	ld.global.f32 	%f53, [normalmatrix+8];
	fma.rn.ftz.f32 	%f54, %f32, %f53, 0f00000000;
	ld.global.f32 	%f55, [normalmatrix+24];
	fma.rn.ftz.f32 	%f56, %f34, %f55, %f54;
	ld.global.f32 	%f57, [normalmatrix+40];
	fma.rn.ftz.f32 	%f58, %f36, %f57, %f56;
	ld.global.f32 	%f59, [normalmatrix+56];
	add.ftz.f32 	%f60, %f58, %f59;
	mul.ftz.f32 	%f61, %f52, %f52;
	fma.rn.ftz.f32 	%f62, %f44, %f44, %f61;
	fma.rn.ftz.f32 	%f63, %f60, %f60, %f62;
	sqrt.approx.ftz.f32 	%f64, %f63;
	rcp.approx.ftz.f32 	%f65, %f64;
	mul.ftz.f32 	%f4, %f44, %f65;
	mul.ftz.f32 	%f5, %f52, %f65;
	mul.ftz.f32 	%f6, %f60, %f65;
	ld.global.u32 	%r2, [radiance_ray_type];
	ld.global.f32 	%f7, [scene_epsilon];
	add.u64 	%rd1, %SP, 0;
	cvta.to.local.u64 	%rd26, %rd1;
	mov.u32 	%r20, 1065353216;
	st.local.u32 	[%rd26+40], %r20;
	mov.u32 	%r21, 0;
	st.local.u32 	[%rd26+44], %r21;
	ld.global.u32 	%r1, [top_object];
	mov.f32 	%f8, 0f6C4ECB8F;
	mov.u32 	%r3, 48;
	// inline asm
	call _rt_trace_64, (%r1, %f17, %f18, %f3, %f4, %f5, %f6, %r2, %f7, %f8, %rd1, %r3);
	// inline asm
	ld.global.u32 	%rd4, [launch_index];
	ld.global.u32 	%rd5, [launch_index+4];
	mov.u64 	%rd27, output_buffer;
	cvta.global.u64 	%rd3, %rd27;
	mov.u32 	%r10, 2;
	mov.u32 	%r11, 16;
	mov.u64 	%rd25, 0;
	// inline asm
	call (%rd2), _rt_buffer_get_64, (%rd3, %r10, %r11, %rd4, %rd5, %rd25, %rd25);
	// inline asm
	ld.local.f32 	%f66, [%rd26+8];
	ld.local.f32 	%f67, [%rd26+4];
	ld.local.f32 	%f68, [%rd26];
	mov.f32 	%f69, 0f3F800000;
	st.v4.f32 	[%rd2], {%f68, %f67, %f66, %f69};
	ld.global.u32 	%rd10, [launch_index];
	ld.global.u32 	%rd11, [launch_index+4];
	mov.u64 	%rd28, output_buffer_nrm;
	cvta.global.u64 	%rd9, %rd28;
	// inline asm
	call (%rd8), _rt_buffer_get_64, (%rd9, %r10, %r11, %rd10, %rd11, %rd25, %rd25);
	// inline asm
	ld.local.f32 	%f70, [%rd26+20];
	ld.local.f32 	%f71, [%rd26+16];
	ld.local.f32 	%f72, [%rd26+12];
	st.v4.f32 	[%rd8], {%f72, %f71, %f70, %f69};
	ld.global.u32 	%rd16, [launch_index];
	ld.global.u32 	%rd17, [launch_index+4];
	mov.u64 	%rd29, output_buffer_depth;
	cvta.global.u64 	%rd15, %rd29;
	// inline asm
	call (%rd14), _rt_buffer_get_64, (%rd15, %r10, %r11, %rd16, %rd17, %rd25, %rd25);
	// inline asm
	ld.local.f32 	%f73, [%rd26+36];
	st.v4.f32 	[%rd14], {%f73, %f73, %f73, %f69};
	ld.global.u32 	%rd22, [launch_index];
	ld.global.u32 	%rd23, [launch_index+4];
	mov.u64 	%rd30, output_buffer_world;
	cvta.global.u64 	%rd21, %rd30;
	// inline asm
	call (%rd20), _rt_buffer_get_64, (%rd21, %r10, %r11, %rd22, %rd23, %rd25, %rd25);
	// inline asm
	ld.local.f32 	%f74, [%rd26+32];
	ld.local.f32 	%f75, [%rd26+28];
	ld.local.f32 	%f76, [%rd26+24];
	st.v4.f32 	[%rd20], {%f76, %f75, %f74, %f69};
	ret;
}

	// .globl	_Z9exceptionv
.visible .entry _Z9exceptionv(

)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<5>;
	.reg .s32 	%r<25>;
	.reg .s64 	%rd<10>;


	// inline asm
	call (%r5), _rt_get_exception_code, ();
	// inline asm
	ld.global.v2.u32 	{%r7, %r8}, [launch_index];
	// inline asm
	call (%r6), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p1, %r6, 0;
	@%p1 bra 	BB7_3;

	mov.u64 	%rd2, $str;
	cvta.global.u64 	%rd1, %rd2;
	mov.u32 	%r10, 76;
	// inline asm
	call (%r9), _rt_print_start_64, (%rd1, %r10);
	// inline asm
	setp.eq.s32	%p2, %r9, 0;
	@%p2 bra 	BB7_3;

	mov.u32 	%r19, 0;
	// inline asm
	call (), _rt_print_write32, (%r19, %r9);
	// inline asm
	add.s32 	%r14, %r9, 4;
	// inline asm
	call (), _rt_print_write32, (%r5, %r14);
	// inline asm
	add.s32 	%r16, %r9, 8;
	// inline asm
	call (), _rt_print_write32, (%r19, %r16);
	// inline asm
	add.s32 	%r18, %r9, 12;
	// inline asm
	call (), _rt_print_write32, (%r7, %r18);
	// inline asm
	add.s32 	%r20, %r9, 16;
	// inline asm
	call (), _rt_print_write32, (%r19, %r20);
	// inline asm
	add.s32 	%r22, %r9, 20;
	// inline asm
	call (), _rt_print_write32, (%r8, %r22);
	// inline asm

BB7_3:
	ld.global.u32 	%rd5, [launch_index];
	ld.global.u32 	%rd6, [launch_index+4];
	mov.u64 	%rd9, output_buffer;
	cvta.global.u64 	%rd4, %rd9;
	mov.u32 	%r23, 2;
	mov.u32 	%r24, 16;
	mov.u64 	%rd8, 0;
	// inline asm
	call (%rd3), _rt_buffer_get_64, (%rd4, %r23, %r24, %rd5, %rd6, %rd8, %rd8);
	// inline asm
	ld.global.f32 	%f1, [bad_color+8];
	ld.global.f32 	%f2, [bad_color+4];
	ld.global.f32 	%f3, [bad_color];
	mov.f32 	%f4, 0f3F800000;
	st.v4.f32 	[%rd3], {%f3, %f2, %f1, %f4};
	ret;
}

	// .globl	_ZN5optix6MatrixILj4ELj4EEC2Ev
.visible .func _ZN5optix6MatrixILj4ELj4EEC2Ev(
	.param .b64 _ZN5optix6MatrixILj4ELj4EEC2Ev_param_0
)
{



	ret;
}


