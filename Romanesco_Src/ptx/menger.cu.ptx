//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-19324607
// Cuda compilation tools, release 7.0, V7.0.27
// Based on LLVM 3.4svn
//

.version 4.2
.target sm_20
.address_size 64

	// .globl	_Z7degreesf
.global .align 1 .b8 output_buffer[1];
.global .align 1 .b8 output_buffer_nrm[1];
.global .align 1 .b8 output_buffer_world[1];
.global .align 1 .b8 output_buffer_depth[1];
.global .align 1 .b8 output_buffer_trap[1];
.global .align 8 .b8 eye[12];
.global .align 4 .f32 delta;
.global .align 4 .f32 DEL;
.global .align 4 .u32 max_iterations;
.global .align 4 .f32 global_t;
.global .align 8 .b8 ray[36];
.global .align 8 .b8 normal[12];
.global .align 4 .u32 iterations;
.global .align 4 .f32 smallestdistance;
.global .align 8 .b8 shading_normal[12];
.global .align 4 .b8 shading_normal2[12];
.global .align 8 .b8 geometric_normal[12];
.global .align 8 .b8 launch_index[8];
.global .align 8 .b8 launch_dim[8];
.global .align 4 .b8 normalmatrix[64];
.global .align 4 .b8 U[12];
.global .align 4 .b8 V[12];
.global .align 4 .b8 W[12];
.global .align 4 .b8 bad_color[12];
.global .align 4 .f32 scene_epsilon;
.global .align 8 .b8 top_object[4];
.global .align 8 .b8 top_shadower[4];
.global .align 4 .f32 isect_t;
.global .align 4 .u32 pathtrace_ray_type;
.global .align 4 .u32 pathtrace_shadow_ray_type;
.global .align 4 .u32 rr_begin_depth;
.global .align 4 .u32 frame_number;
.global .align 4 .u32 sqrt_num_samples;
.global .align 4 .f32 t_hit;
.global .align 8 .b8 TileSize[8];
.global .align 8 .b8 NoOfTiles[8];
.global .align 4 .b8 bg_color[12];
.global .align 4 .b8 do_work[4];
.global .align 16 .b8 current_prd[128];
.global .align 16 .b8 prd_radiance[128];
.global .align 1 .b8 lights[1];
.global .align 4 .b8 emission_color[12];
.global .align 4 .b8 current_prd_shadow[24];
.global .align 8 .b8 diffuse_color[12];
.global .texref envmap;
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 4 .f32 time_view_scale = 0f358637BD;
.global .align 4 .b8 _ZN21rti_internal_typeinfo3eyeE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo5deltaE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3DELE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14max_iterationsE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8global_tE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3rayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10iterationsE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo16smallestdistanceE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14shading_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo15shading_normal2E[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo16geometric_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12launch_indexE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10launch_dimE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo15time_view_scaleE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12normalmatrixE[8] = {82, 97, 121, 0, 64, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1UE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1VE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1WE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9bad_colorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13scene_epsilonE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10top_objectE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12top_shadowerE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7isect_tE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo18pathtrace_ray_typeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo25pathtrace_shadow_ray_typeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14rr_begin_depthE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12frame_numberE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo16sqrt_num_samplesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo5t_hitE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8TileSizeE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9NoOfTilesE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8bg_colorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7do_workE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11current_prdE[8] = {82, 97, 121, 0, 128, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12prd_radianceE[8] = {82, 97, 121, 0, 128, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14emission_colorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo18current_prd_shadowE[8] = {82, 97, 121, 0, 24, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13diffuse_colorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3eyeE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename5deltaE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3DELE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14max_iterationsE[5] = {117, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename8global_tE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3rayE[11] = {111, 112, 116, 105, 120, 58, 58, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10iterationsE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename16smallestdistanceE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14shading_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename15shading_normal2E[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename16geometric_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12launch_indexE[6] = {117, 105, 110, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10launch_dimE[6] = {117, 105, 110, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename15time_view_scaleE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12normalmatrixE[10] = {77, 97, 116, 114, 105, 120, 52, 120, 52, 0};
.global .align 1 .b8 _ZN21rti_internal_typename1UE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename1VE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename1WE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9bad_colorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename13scene_epsilonE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10top_objectE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12top_shadowerE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename7isect_tE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename18pathtrace_ray_typeE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename25pathtrace_shadow_ray_typeE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14rr_begin_depthE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12frame_numberE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename16sqrt_num_samplesE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename5t_hitE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename8TileSizeE[7] = {102, 108, 111, 97, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9NoOfTilesE[6] = {117, 105, 110, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename8bg_colorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename7do_workE[6] = {99, 97, 108, 108, 84, 0};
.global .align 1 .b8 _ZN21rti_internal_typename11current_prdE[21] = {80, 101, 114, 82, 97, 121, 68, 97, 116, 97, 95, 112, 97, 116, 104, 116, 114, 97, 99, 101, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12prd_radianceE[21] = {80, 101, 114, 82, 97, 121, 68, 97, 116, 97, 95, 112, 97, 116, 104, 116, 114, 97, 99, 101, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14emission_colorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename18current_prd_shadowE[28] = {80, 101, 114, 82, 97, 121, 68, 97, 116, 97, 95, 112, 97, 116, 104, 116, 114, 97, 99, 101, 95, 115, 104, 97, 100, 111, 119, 0};
.global .align 1 .b8 _ZN21rti_internal_typename13diffuse_colorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum3eyeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum5deltaE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3DELE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14max_iterationsE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8global_tE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3rayE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10iterationsE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum16smallestdistanceE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14shading_normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum15shading_normal2E = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum16geometric_normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12launch_indexE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10launch_dimE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum15time_view_scaleE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12normalmatrixE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1UE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1VE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1WE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9bad_colorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13scene_epsilonE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10top_objectE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12top_shadowerE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7isect_tE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum18pathtrace_ray_typeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum25pathtrace_shadow_ray_typeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14rr_begin_depthE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12frame_numberE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum16sqrt_num_samplesE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum5t_hitE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8TileSizeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9NoOfTilesE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8bg_colorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7do_workE = 4921;
.global .align 4 .u32 _ZN21rti_internal_typeenum11current_prdE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12prd_radianceE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14emission_colorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum18current_prd_shadowE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13diffuse_colorE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic3eyeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic5deltaE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic3DELE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14max_iterationsE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8global_tE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic3rayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic10iterationsE[21] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 105, 116, 101, 114, 97, 116, 105, 111, 110, 115, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic16smallestdistanceE[27] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 115, 109, 97, 108, 108, 101, 115, 116, 100, 105, 115, 116, 97, 110, 99, 101, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic14shading_normalE[25] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 115, 104, 97, 100, 105, 110, 103, 95, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic15shading_normal2E[26] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 115, 104, 97, 100, 105, 110, 103, 95, 110, 111, 114, 109, 97, 108, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic16geometric_normalE[27] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 103, 101, 111, 109, 101, 116, 114, 105, 99, 95, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic12launch_indexE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic10launch_dimE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic15time_view_scaleE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12normalmatrixE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1UE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1VE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1WE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9bad_colorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic13scene_epsilonE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10top_objectE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12top_shadowerE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7isect_tE[23] = {114, 116, 73, 110, 116, 101, 114, 115, 101, 99, 116, 105, 111, 110, 68, 105, 115, 116, 97, 110, 99, 101, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic18pathtrace_ray_typeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic25pathtrace_shadow_ray_typeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14rr_begin_depthE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12frame_numberE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic16sqrt_num_samplesE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic5t_hitE[23] = {114, 116, 73, 110, 116, 101, 114, 115, 101, 99, 116, 105, 111, 110, 68, 105, 115, 116, 97, 110, 99, 101, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic8TileSizeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9NoOfTilesE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8bg_colorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7do_workE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11current_prdE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic12prd_radianceE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic14emission_colorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic18current_prd_shadowE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic13diffuse_colorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3eyeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation5deltaE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3DELE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14max_iterationsE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8global_tE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3rayE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10iterationsE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation16smallestdistanceE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14shading_normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation15shading_normal2E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation16geometric_normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12launch_indexE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10launch_dimE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation15time_view_scaleE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12normalmatrixE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1UE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1VE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1WE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9bad_colorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13scene_epsilonE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10top_objectE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12top_shadowerE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7isect_tE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation18pathtrace_ray_typeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation25pathtrace_shadow_ray_typeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14rr_begin_depthE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12frame_numberE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation16sqrt_num_samplesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation5t_hitE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8TileSizeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9NoOfTilesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8bg_colorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7do_workE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11current_prdE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12prd_radianceE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14emission_colorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation18current_prd_shadowE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13diffuse_colorE[1];
.global .align 1 .b8 $str[33] = {69, 120, 99, 101, 112, 116, 105, 111, 110, 32, 99, 111, 100, 101, 32, 48, 120, 37, 88, 32, 97, 116, 32, 40, 37, 100, 44, 32, 37, 100, 41, 10, 0};

.visible .func  (.param .b32 func_retval0) _Z7degreesf(
	.param .b32 _Z7degreesf_param_0
)
{
	.reg .f32 	%f<3>;
	.reg .f64 	%fd<3>;


	ld.param.f32 	%f1, [_Z7degreesf_param_0];
	cvt.ftz.f64.f32	%fd1, %f1;
	mul.f64 	%fd2, %fd1, 0d404CA5DC1A63C1F8;
	cvt.rn.ftz.f32.f64	%f2, %fd2;
	st.param.f32	[func_retval0+0], %f2;
	ret;
}

	// .globl	_Z7radiansf
.visible .func  (.param .b32 func_retval0) _Z7radiansf(
	.param .b32 _Z7radiansf_param_0
)
{
	.reg .f32 	%f<3>;
	.reg .f64 	%fd<3>;


	ld.param.f32 	%f1, [_Z7radiansf_param_0];
	cvt.ftz.f64.f32	%fd1, %f1;
	mul.f64 	%fd2, %fd1, 0d3F91DF46A2529D39;
	cvt.rn.ftz.f32.f64	%f2, %fd2;
	st.param.f32	[func_retval0+0], %f2;
	ret;
}

	// .globl	_Z12insideSphere6float3S_fPf
.visible .func  (.param .b32 func_retval0) _Z12insideSphere6float3S_fPf(
	.param .align 4 .b8 _Z12insideSphere6float3S_fPf_param_0[12],
	.param .align 4 .b8 _Z12insideSphere6float3S_fPf_param_1[12],
	.param .b32 _Z12insideSphere6float3S_fPf_param_2,
	.param .b64 _Z12insideSphere6float3S_fPf_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<16>;
	.reg .s32 	%r<2>;
	.reg .s64 	%rd<2>;


	ld.param.f32 	%f1, [_Z12insideSphere6float3S_fPf_param_0+8];
	ld.param.f32 	%f2, [_Z12insideSphere6float3S_fPf_param_0+4];
	ld.param.f32 	%f3, [_Z12insideSphere6float3S_fPf_param_0];
	ld.param.f32 	%f4, [_Z12insideSphere6float3S_fPf_param_1+8];
	ld.param.f32 	%f5, [_Z12insideSphere6float3S_fPf_param_1+4];
	ld.param.f32 	%f6, [_Z12insideSphere6float3S_fPf_param_1];
	ld.param.f32 	%f7, [_Z12insideSphere6float3S_fPf_param_2];
	ld.param.u64 	%rd1, [_Z12insideSphere6float3S_fPf_param_3];
	sub.ftz.f32 	%f8, %f3, %f6;
	sub.ftz.f32 	%f9, %f2, %f5;
	sub.ftz.f32 	%f10, %f1, %f4;
	mul.ftz.f32 	%f11, %f9, %f9;
	fma.rn.ftz.f32 	%f12, %f8, %f8, %f11;
	fma.rn.ftz.f32 	%f13, %f10, %f10, %f12;
	sqrt.approx.ftz.f32 	%f14, %f13;
	sqrt.approx.ftz.f32 	%f15, %f7;
	st.f32 	[%rd1], %f14;
	setp.le.ftz.f32	%p1, %f14, %f15;
	selp.u32	%r1, 1, 0, %p1;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .globl	_Z8sdfCross6float3
.visible .func  (.param .b32 func_retval0) _Z8sdfCross6float3(
	.param .align 4 .b8 _Z8sdfCross6float3_param_0[12]
)
{
	.reg .f32 	%f<46>;


	ld.param.f32 	%f1, [_Z8sdfCross6float3_param_0+8];
	ld.param.f32 	%f2, [_Z8sdfCross6float3_param_0+4];
	ld.param.f32 	%f3, [_Z8sdfCross6float3_param_0];
	abs.ftz.f32 	%f4, %f3;
	abs.ftz.f32 	%f5, %f2;
	abs.ftz.f32 	%f6, %f1;
	add.ftz.f32 	%f7, %f4, 0fC61C4000;
	add.ftz.f32 	%f8, %f5, 0fBF800000;
	add.ftz.f32 	%f9, %f6, 0fBF800000;
	max.ftz.f32 	%f10, %f8, %f9;
	max.ftz.f32 	%f11, %f7, %f10;
	mov.f32 	%f12, 0f00000000;
	min.ftz.f32 	%f13, %f11, %f12;
	max.ftz.f32 	%f14, %f7, %f12;
	max.ftz.f32 	%f15, %f8, %f12;
	max.ftz.f32 	%f16, %f9, %f12;
	mul.ftz.f32 	%f17, %f15, %f15;
	fma.rn.ftz.f32 	%f18, %f14, %f14, %f17;
	fma.rn.ftz.f32 	%f19, %f16, %f16, %f18;
	sqrt.approx.ftz.f32 	%f20, %f19;
	add.ftz.f32 	%f21, %f13, %f20;
	add.ftz.f32 	%f22, %f6, 0fC61C4000;
	add.ftz.f32 	%f23, %f4, 0fBF800000;
	max.ftz.f32 	%f24, %f22, %f23;
	max.ftz.f32 	%f25, %f8, %f24;
	min.ftz.f32 	%f26, %f25, %f12;
	max.ftz.f32 	%f27, %f22, %f12;
	max.ftz.f32 	%f28, %f23, %f12;
	mul.ftz.f32 	%f29, %f27, %f27;
	fma.rn.ftz.f32 	%f30, %f15, %f15, %f29;
	mul.ftz.f32 	%f31, %f28, %f28;
	add.ftz.f32 	%f32, %f30, %f31;
	sqrt.approx.ftz.f32 	%f33, %f32;
	add.ftz.f32 	%f34, %f26, %f33;
	add.ftz.f32 	%f35, %f5, 0fC61C4000;
	max.ftz.f32 	%f36, %f23, %f35;
	max.ftz.f32 	%f37, %f9, %f36;
	min.ftz.f32 	%f38, %f37, %f12;
	max.ftz.f32 	%f39, %f35, %f12;
	fma.rn.ftz.f32 	%f40, %f16, %f16, %f31;
	fma.rn.ftz.f32 	%f41, %f39, %f39, %f40;
	sqrt.approx.ftz.f32 	%f42, %f41;
	add.ftz.f32 	%f43, %f38, %f42;
	min.ftz.f32 	%f44, %f34, %f43;
	min.ftz.f32 	%f45, %f21, %f44;
	st.param.f32	[func_retval0+0], %f45;
	ret;
}

	// .globl	_Z6rotate6float2f
.visible .func  (.param .align 8 .b8 func_retval0[8]) _Z6rotate6float2f(
	.param .align 8 .b8 _Z6rotate6float2f_param_0[8],
	.param .b32 _Z6rotate6float2f_param_1
)
{
	.reg .f32 	%f<11>;


	ld.param.f32 	%f1, [_Z6rotate6float2f_param_0];
	ld.param.f32 	%f2, [_Z6rotate6float2f_param_0+4];
	ld.param.f32 	%f3, [_Z6rotate6float2f_param_1];
	cos.approx.ftz.f32 	%f4, %f3;
	sin.approx.ftz.f32 	%f5, %f3;
	mul.ftz.f32 	%f6, %f2, %f5;
	fma.rn.ftz.f32 	%f7, %f1, %f4, %f6;
	mul.ftz.f32 	%f8, %f1, %f5;
	mul.ftz.f32 	%f9, %f2, %f4;
	sub.ftz.f32 	%f10, %f9, %f8;
	st.param.f32	[func_retval0+0], %f7;
	st.param.f32	[func_retval0+4], %f10;
	ret;
}

	// .globl	_Z4hashf
.visible .func  (.param .b32 func_retval0) _Z4hashf(
	.param .b32 _Z4hashf_param_0
)
{
	.reg .f32 	%f<6>;
	.reg .f64 	%fd<3>;


	ld.param.f32 	%f1, [_Z4hashf_param_0];
	sin.approx.ftz.f32 	%f2, %f1;
	cvt.ftz.f64.f32	%fd1, %f2;
	mul.f64 	%fd2, %fd1, 0d40E55DD17318FC50;
	cvt.rn.ftz.f32.f64	%f3, %fd2;
	cvt.rmi.ftz.f32.f32	%f4, %f3;
	sub.ftz.f32 	%f5, %f3, %f4;
	st.param.f32	[func_retval0+0], %f5;
	ret;
}

	// .globl	_Z15cosineDirectionf6float3
.visible .func  (.param .align 4 .b8 func_retval0[12]) _Z15cosineDirectionf6float3(
	.param .b32 _Z15cosineDirectionf6float3_param_0,
	.param .align 4 .b8 _Z15cosineDirectionf6float3_param_1[12]
)
{
	.reg .f32 	%f<46>;
	.reg .f64 	%fd<14>;


	ld.param.f32 	%f1, [_Z15cosineDirectionf6float3_param_0];
	ld.param.f32 	%f2, [_Z15cosineDirectionf6float3_param_1+4];
	ld.param.f32 	%f3, [_Z15cosineDirectionf6float3_param_1];
	ld.param.f32 	%f4, [_Z15cosineDirectionf6float3_param_1+8];
	add.ftz.f32 	%f5, %f4, 0f3F800000;
	mul.ftz.f32 	%f6, %f3, %f3;
	sub.ftz.f32 	%f7, %f5, %f6;
	mul.ftz.f32 	%f8, %f2, %f2;
	sub.ftz.f32 	%f9, %f5, %f8;
	mul.ftz.f32 	%f10, %f3, %f2;
	rcp.approx.ftz.f32 	%f11, %f5;
	mul.ftz.f32 	%f12, %f7, %f11;
	mul.ftz.f32 	%f13, %f9, %f11;
	mul.ftz.f32 	%f14, %f10, %f11;
	cvt.ftz.f64.f32	%fd1, %f1;
	add.f64 	%fd2, %fd1, 0d40538EE978D4FDF4;
	cvt.rn.ftz.f32.f64	%f15, %fd2;
	sin.approx.ftz.f32 	%f16, %f15;
	cvt.ftz.f64.f32	%fd3, %f16;
	mul.f64 	%fd4, %fd3, 0d40E55DD17318FC50;
	cvt.rn.ftz.f32.f64	%f17, %fd4;
	cvt.rmi.ftz.f32.f32	%f18, %f17;
	sub.ftz.f32 	%f19, %f17, %f18;
	add.f64 	%fd5, %fd1, 0d4025BEF9DB22D0E5;
	cvt.rn.ftz.f32.f64	%f20, %fd5;
	sin.approx.ftz.f32 	%f21, %f20;
	cvt.ftz.f64.f32	%fd6, %f21;
	mul.f64 	%fd7, %fd6, 0d40E55DD17318FC50;
	cvt.rn.ftz.f32.f64	%f22, %fd7;
	cvt.rmi.ftz.f32.f32	%f23, %f22;
	sub.ftz.f32 	%f24, %f22, %f23;
	cvt.ftz.f64.f32	%fd8, %f24;
	mul.f64 	%fd9, %fd8, 0d401921FB3FA6DEFC;
	cvt.rn.ftz.f32.f64	%f25, %fd9;
	sqrt.approx.ftz.f32 	%f26, %f19;
	cos.approx.ftz.f32 	%f27, %f25;
	mul.ftz.f32 	%f28, %f12, %f27;
	mul.ftz.f32 	%f29, %f27, %f14;
	mul.ftz.f32 	%f30, %f3, %f27;
	sin.approx.ftz.f32 	%f31, %f25;
	mul.ftz.f32 	%f32, %f31, %f14;
	mul.ftz.f32 	%f33, %f13, %f31;
	mul.ftz.f32 	%f34, %f2, %f31;
	neg.ftz.f32 	%f35, %f34;
	sub.ftz.f32 	%f36, %f28, %f32;
	sub.ftz.f32 	%f37, %f33, %f29;
	sub.ftz.f32 	%f38, %f35, %f30;
	mul.ftz.f32 	%f39, %f26, %f38;
	cvt.ftz.f64.f32	%fd10, %f19;
	mov.f64 	%fd11, 0d3FF0000000000000;
	sub.f64 	%fd12, %fd11, %fd10;
	sqrt.rn.f64 	%fd13, %fd12;
	cvt.rn.ftz.f32.f64	%f40, %fd13;
	mul.ftz.f32 	%f41, %f3, %f40;
	mul.ftz.f32 	%f42, %f2, %f40;
	fma.rn.ftz.f32 	%f43, %f26, %f36, %f41;
	fma.rn.ftz.f32 	%f44, %f26, %f37, %f42;
	fma.rn.ftz.f32 	%f45, %f4, %f40, %f39;
	st.param.f32	[func_retval0+0], %f43;
	st.param.f32	[func_retval0+4], %f44;
	st.param.f32	[func_retval0+8], %f45;
	ret;
}

	// .globl	_Z9exceptionv
.visible .entry _Z9exceptionv(

)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<5>;
	.reg .s32 	%r<35>;
	.reg .s64 	%rd<38>;


	ld.global.u32 	%rd3, [launch_index];
	ld.global.u32 	%rd4, [launch_index+4];
	mov.u64 	%rd31, output_buffer;
	cvta.global.u64 	%rd2, %rd31;
	mov.u32 	%r13, 2;
	mov.u32 	%r6, 16;
	mov.u64 	%rd30, 0;
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r13, %r6, %rd3, %rd4, %rd30, %rd30);
	// inline asm
	ld.global.f32 	%f1, [bad_color+8];
	ld.global.f32 	%f2, [bad_color+4];
	ld.global.f32 	%f3, [bad_color];
	mov.f32 	%f4, 0f00000000;
	st.v4.f32 	[%rd1], {%f3, %f2, %f1, %f4};
	ld.global.u32 	%rd9, [launch_index];
	ld.global.u32 	%rd10, [launch_index+4];
	mov.u64 	%rd32, output_buffer_nrm;
	cvta.global.u64 	%rd8, %rd32;
	mov.u32 	%r10, 12;
	// inline asm
	call (%rd7), _rt_buffer_get_64, (%rd8, %r13, %r10, %rd9, %rd10, %rd30, %rd30);
	// inline asm
	mov.u32 	%r17, 0;
	st.u32 	[%rd7+8], %r17;
	st.u32 	[%rd7+4], %r17;
	st.u32 	[%rd7], %r17;
	ld.global.u32 	%rd15, [launch_index];
	ld.global.u32 	%rd16, [launch_index+4];
	mov.u64 	%rd33, output_buffer_world;
	cvta.global.u64 	%rd14, %rd33;
	// inline asm
	call (%rd13), _rt_buffer_get_64, (%rd14, %r13, %r10, %rd15, %rd16, %rd30, %rd30);
	// inline asm
	st.u32 	[%rd13+8], %r17;
	st.u32 	[%rd13+4], %r17;
	st.u32 	[%rd13], %r17;
	ld.global.u32 	%rd21, [launch_index];
	ld.global.u32 	%rd22, [launch_index+4];
	mov.u64 	%rd34, output_buffer_depth;
	cvta.global.u64 	%rd20, %rd34;
	mov.u32 	%r14, 4;
	// inline asm
	call (%rd19), _rt_buffer_get_64, (%rd20, %r13, %r14, %rd21, %rd22, %rd30, %rd30);
	// inline asm
	mov.u32 	%r18, 1817103247;
	st.u32 	[%rd19], %r18;
	ld.global.u32 	%rd27, [launch_index];
	ld.global.u32 	%rd28, [launch_index+4];
	mov.u64 	%rd35, output_buffer_trap;
	cvta.global.u64 	%rd26, %rd35;
	// inline asm
	call (%rd25), _rt_buffer_get_64, (%rd26, %r13, %r14, %rd27, %rd28, %rd30, %rd30);
	// inline asm
	st.u32 	[%rd25], %r17;
	// inline asm
	call (%r15), _rt_get_exception_code, ();
	// inline asm
	ld.global.v2.u32 	{%r19, %r20}, [launch_index];
	// inline asm
	call (%r16), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p1, %r16, 0;
	@%p1 bra 	BB7_3;

	mov.u64 	%rd37, $str;
	cvta.global.u64 	%rd36, %rd37;
	mov.u32 	%r22, 64;
	// inline asm
	call (%r21), _rt_print_start_64, (%rd36, %r22);
	// inline asm
	setp.eq.s32	%p2, %r21, 0;
	@%p2 bra 	BB7_3;

	// inline asm
	call (), _rt_print_write32, (%r17, %r21);
	// inline asm
	add.s32 	%r26, %r21, 4;
	// inline asm
	call (), _rt_print_write32, (%r15, %r26);
	// inline asm
	add.s32 	%r28, %r21, 8;
	// inline asm
	call (), _rt_print_write32, (%r17, %r28);
	// inline asm
	add.s32 	%r30, %r21, 12;
	// inline asm
	call (), _rt_print_write32, (%r19, %r30);
	// inline asm
	add.s32 	%r32, %r21, 16;
	// inline asm
	call (), _rt_print_write32, (%r17, %r32);
	// inline asm
	add.s32 	%r34, %r21, 20;
	// inline asm
	call (), _rt_print_write32, (%r20, %r34);
	// inline asm

BB7_3:
	ret;
}

	// .globl	_Z16pathtrace_camerav
.visible .entry _Z16pathtrace_camerav(

)
{
	.local .align 16 .b8 	__local_depot8[128];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<3>;
	.reg .f32 	%f<206>;
	.reg .s32 	%r<129>;
	.reg .s64 	%rd<116>;


	mov.u64 	%rd115, __local_depot8;
	cvta.local.u64 	%SP, %rd115;
	mov.u64 	%rd8, output_buffer;
	cvta.global.u64 	%rd7, %rd8;
	mov.u32 	%r11, 2;
	mov.u32 	%r12, 16;
	// inline asm
	call (%rd3, %rd4, %rd5, %rd6), _rt_buffer_get_size_64, (%rd7, %r11, %r12);
	// inline asm
	ld.global.v2.f32 	{%f53, %f54}, [TileSize];
	cvt.rzi.ftz.u32.f32	%r13, %f53;
	cvt.rzi.ftz.u32.f32	%r14, %f54;
	ld.global.v2.u32 	{%r15, %r16}, [NoOfTiles];
	ld.global.v2.u32 	{%r19, %r20}, [launch_index];
	mad.lo.s32 	%r22, %r15, %r13, %r19;
	mad.lo.s32 	%r24, %r16, %r14, %r20;
	cvt.rn.f32.u64	%f57, %rd3;
	cvt.rn.f32.u64	%f58, %rd4;
	rcp.approx.ftz.f32 	%f59, %f57;
	rcp.approx.ftz.f32 	%f60, %f58;
	add.ftz.f32 	%f61, %f59, %f59;
	add.ftz.f32 	%f62, %f60, %f60;
	cvt.rn.f32.u32	%f63, %r22;
	cvt.rn.f32.u32	%f64, %r24;
	fma.rn.ftz.f32 	%f1, %f63, %f61, 0fBF800000;
	fma.rn.ftz.f32 	%f2, %f64, %f62, 0fBF800000;
	ld.global.u32 	%r126, [sqrt_num_samples];
	cvt.rn.f32.u32	%f65, %r126;
	rcp.approx.ftz.f32 	%f66, %f65;
	mul.ftz.f32 	%f3, %f61, %f66;
	mul.ftz.f32 	%f4, %f62, %f66;
	mul.lo.s32 	%r127, %r126, %r126;
	cvt.u64.u32	%rd1, %r24;
	mul.lo.s64 	%rd9, %rd1, %rd3;
	cvt.u64.u32	%rd2, %r22;
	add.s64 	%rd10, %rd9, %rd2;
	cvt.u32.u64	%r25, %rd10;
	ld.global.u32 	%r26, [frame_number];
	shl.b32 	%r27, %r26, 4;
	add.s32 	%r28, %r27, -1556008596;
	add.s32 	%r29, %r26, -1640531527;
	xor.b32  	%r30, %r28, %r29;
	shr.u32 	%r31, %r26, 5;
	add.s32 	%r32, %r31, -939442524;
	xor.b32  	%r33, %r30, %r32;
	add.s32 	%r34, %r33, %r25;
	shl.b32 	%r35, %r34, 4;
	add.s32 	%r36, %r35, -1383041155;
	add.s32 	%r37, %r34, -1640531527;
	xor.b32  	%r38, %r36, %r37;
	shr.u32 	%r39, %r34, 5;
	add.s32 	%r40, %r39, 2123724318;
	xor.b32  	%r41, %r38, %r40;
	add.s32 	%r42, %r41, %r26;
	shl.b32 	%r43, %r42, 4;
	add.s32 	%r44, %r43, -1556008596;
	add.s32 	%r45, %r42, 1013904242;
	xor.b32  	%r46, %r44, %r45;
	shr.u32 	%r47, %r42, 5;
	add.s32 	%r48, %r47, -939442524;
	xor.b32  	%r49, %r46, %r48;
	add.s32 	%r50, %r49, %r34;
	shl.b32 	%r51, %r50, 4;
	add.s32 	%r52, %r51, -1383041155;
	add.s32 	%r53, %r50, 1013904242;
	xor.b32  	%r54, %r52, %r53;
	shr.u32 	%r55, %r50, 5;
	add.s32 	%r56, %r55, 2123724318;
	xor.b32  	%r57, %r54, %r56;
	add.s32 	%r58, %r57, %r42;
	shl.b32 	%r59, %r58, 4;
	add.s32 	%r60, %r59, -1556008596;
	add.s32 	%r61, %r58, -626627285;
	xor.b32  	%r62, %r60, %r61;
	shr.u32 	%r63, %r58, 5;
	add.s32 	%r64, %r63, -939442524;
	xor.b32  	%r65, %r62, %r64;
	add.s32 	%r66, %r65, %r50;
	shl.b32 	%r67, %r66, 4;
	add.s32 	%r68, %r67, -1383041155;
	add.s32 	%r69, %r66, -626627285;
	xor.b32  	%r70, %r68, %r69;
	shr.u32 	%r71, %r66, 5;
	add.s32 	%r72, %r71, 2123724318;
	xor.b32  	%r73, %r70, %r72;
	add.s32 	%r74, %r73, %r58;
	shl.b32 	%r75, %r74, 4;
	add.s32 	%r76, %r75, -1556008596;
	add.s32 	%r77, %r74, 2027808484;
	xor.b32  	%r78, %r76, %r77;
	shr.u32 	%r79, %r74, 5;
	add.s32 	%r80, %r79, -939442524;
	xor.b32  	%r81, %r78, %r80;
	add.s32 	%r128, %r81, %r66;
	mov.f32 	%f52, 0f00000000;
	mov.f32 	%f204, %f52;
	mov.f32 	%f203, %f52;
	mov.f32 	%f202, %f52;
	mov.f32 	%f201, %f52;
	mov.f32 	%f200, %f52;
	mov.f32 	%f199, %f52;
	mov.f32 	%f198, %f52;
	mov.f32 	%f197, %f52;
	mov.f32 	%f196, %f52;
	mov.f32 	%f195, %f52;
	mov.f32 	%f194, %f52;
	mov.f32 	%f205, %f52;
	bra.uni 	BB8_1;

BB8_2:
	ld.local.u32 	%r128, [%rd12+96];
	ld.global.u32 	%r126, [sqrt_num_samples];
	mov.f32 	%f205, %f28;

BB8_1:
	mov.u32 	%r6, %r128;
	mov.f32 	%f16, %f205;
	mov.u32 	%r4, %r126;
	rem.u32 	%r85, %r127, %r4;
	cvt.rn.f32.u32	%f75, %r85;
	mad.lo.s32 	%r86, %r6, 1664525, 1013904223;
	and.b32  	%r87, %r86, 16777215;
	cvt.rn.f32.u32	%f76, %r87;
	mov.f32 	%f77, 0f4B800000;
	div.approx.ftz.f32 	%f78, %f76, %f77;
	sub.ftz.f32 	%f79, %f75, %f78;
	div.u32 	%r88, %r127, %r4;
	cvt.rn.f32.u32	%f80, %r88;
	mad.lo.s32 	%r89, %r86, 1664525, 1013904223;
	and.b32  	%r90, %r89, 16777215;
	cvt.rn.f32.u32	%f81, %r90;
	div.approx.ftz.f32 	%f82, %f81, %f77;
	sub.ftz.f32 	%f83, %f80, %f82;
	fma.rn.ftz.f32 	%f84, %f3, %f79, %f1;
	fma.rn.ftz.f32 	%f85, %f4, %f83, %f2;
	ld.global.v2.f32 	{%f86, %f87}, [eye];
	ld.global.f32 	%f69, [eye+8];
	ld.global.f32 	%f88, [U];
	ld.global.f32 	%f89, [U+4];
	ld.global.f32 	%f90, [U+8];
	ld.global.f32 	%f91, [V];
	mul.ftz.f32 	%f92, %f85, %f91;
	ld.global.f32 	%f93, [V+4];
	mul.ftz.f32 	%f94, %f85, %f93;
	ld.global.f32 	%f95, [V+8];
	mul.ftz.f32 	%f96, %f85, %f95;
	fma.rn.ftz.f32 	%f97, %f88, %f84, %f92;
	fma.rn.ftz.f32 	%f98, %f84, %f89, %f94;
	fma.rn.ftz.f32 	%f99, %f84, %f90, %f96;
	ld.global.f32 	%f100, [W];
	add.ftz.f32 	%f101, %f97, %f100;
	ld.global.f32 	%f102, [W+4];
	add.ftz.f32 	%f103, %f98, %f102;
	ld.global.f32 	%f104, [W+8];
	add.ftz.f32 	%f105, %f99, %f104;
	mul.ftz.f32 	%f106, %f103, %f103;
	fma.rn.ftz.f32 	%f107, %f101, %f101, %f106;
	fma.rn.ftz.f32 	%f108, %f105, %f105, %f107;
	sqrt.approx.ftz.f32 	%f109, %f108;
	rcp.approx.ftz.f32 	%f110, %f109;
	mul.ftz.f32 	%f111, %f101, %f110;
	mul.ftz.f32 	%f112, %f103, %f110;
	mul.ftz.f32 	%f113, %f105, %f110;
	ld.global.f32 	%f114, [normalmatrix];
	fma.rn.ftz.f32 	%f115, %f111, %f114, 0f00000000;
	ld.global.f32 	%f116, [normalmatrix+16];
	fma.rn.ftz.f32 	%f117, %f112, %f116, %f115;
	ld.global.f32 	%f118, [normalmatrix+32];
	fma.rn.ftz.f32 	%f119, %f113, %f118, %f117;
	ld.global.f32 	%f120, [normalmatrix+48];
	add.ftz.f32 	%f70, %f119, %f120;
	ld.global.f32 	%f121, [normalmatrix+4];
	fma.rn.ftz.f32 	%f122, %f111, %f121, 0f00000000;
	ld.global.f32 	%f123, [normalmatrix+20];
	fma.rn.ftz.f32 	%f124, %f112, %f123, %f122;
	ld.global.f32 	%f125, [normalmatrix+36];
	fma.rn.ftz.f32 	%f126, %f113, %f125, %f124;
	ld.global.f32 	%f127, [normalmatrix+52];
	add.ftz.f32 	%f71, %f126, %f127;
	ld.global.f32 	%f128, [normalmatrix+8];
	fma.rn.ftz.f32 	%f129, %f111, %f128, 0f00000000;
	ld.global.f32 	%f130, [normalmatrix+24];
	fma.rn.ftz.f32 	%f131, %f112, %f130, %f129;
	ld.global.f32 	%f132, [normalmatrix+40];
	fma.rn.ftz.f32 	%f133, %f113, %f132, %f131;
	ld.global.f32 	%f134, [normalmatrix+56];
	add.ftz.f32 	%f72, %f133, %f134;
	add.u64 	%rd11, %SP, 0;
	cvta.to.local.u64 	%rd12, %rd11;
	st.local.v4.f32 	[%rd12], {%f52, %f52, %f52, %f52};
	st.local.v2.f32 	[%rd12+16], {%f52, %f52};
	mov.u32 	%r91, 0;
	st.local.u32 	[%rd12+24], %r91;
	st.local.u32 	[%rd12+36], %r91;
	st.local.u32 	[%rd12+32], %r91;
	st.local.u32 	[%rd12+28], %r91;
	st.local.u32 	[%rd12+40], %r91;
	st.local.u32 	[%rd12+44], %r91;
	mov.u32 	%r92, 1065353216;
	st.local.u32 	[%rd12+92], %r92;
	st.local.u32 	[%rd12+88], %r92;
	st.local.u32 	[%rd12+84], %r92;
	st.local.u32 	[%rd12+68], %r91;
	st.local.u32 	[%rd12+64], %r91;
	st.local.u32 	[%rd12+60], %r91;
	mov.u32 	%r93, 1;
	st.local.u32 	[%rd12+104], %r93;
	st.local.u32 	[%rd12+108], %r91;
	st.local.u32 	[%rd12+96], %r89;
	st.local.u32 	[%rd12+100], %r91;
	st.local.u32 	[%rd12+116], %r91;
	ld.global.u32 	%r83, [pathtrace_ray_type];
	ld.global.f32 	%f73, [scene_epsilon];
	ld.global.u32 	%r82, [top_object];
	mov.f32 	%f74, 0f6C4ECB8F;
	mov.u32 	%r84, 128;
	// inline asm
	call _rt_trace_64, (%r82, %f86, %f87, %f69, %f70, %f71, %f72, %r83, %f73, %f74, %rd11, %r84);
	// inline asm
	ld.local.f32 	%f136, [%rd12];
	add.ftz.f32 	%f194, %f194, %f136;
	ld.local.f32 	%f137, [%rd12+4];
	add.ftz.f32 	%f195, %f195, %f137;
	ld.local.f32 	%f138, [%rd12+8];
	add.ftz.f32 	%f196, %f196, %f138;
	ld.local.f32 	%f139, [%rd12+12];
	add.ftz.f32 	%f197, %f197, %f139;
	ld.local.f32 	%f140, [%rd12+16];
	add.ftz.f32 	%f198, %f198, %f140;
	ld.local.f32 	%f141, [%rd12+20];
	add.ftz.f32 	%f199, %f199, %f141;
	ld.local.f32 	%f142, [%rd12+24];
	add.ftz.f32 	%f200, %f200, %f142;
	ld.local.f32 	%f143, [%rd12+28];
	add.ftz.f32 	%f201, %f201, %f143;
	ld.local.f32 	%f144, [%rd12+32];
	add.ftz.f32 	%f202, %f202, %f144;
	ld.local.f32 	%f145, [%rd12+36];
	add.ftz.f32 	%f203, %f203, %f145;
	ld.local.f32 	%f146, [%rd12+40];
	add.ftz.f32 	%f204, %f204, %f146;
	ld.local.f32 	%f147, [%rd12+44];
	add.ftz.f32 	%f28, %f16, %f147;
	add.s32 	%r127, %r127, -1;
	setp.eq.s32	%p1, %r127, 0;
	@%p1 bra 	BB8_3;
	bra.uni 	BB8_2;

BB8_3:
	ld.global.u32 	%r94, [sqrt_num_samples];
	mul.lo.s32 	%r95, %r94, %r94;
	cvt.rn.f32.u32	%f148, %r95;
	rcp.approx.ftz.f32 	%f149, %f148;
	mul.ftz.f32 	%f29, %f194, %f149;
	mul.ftz.f32 	%f30, %f195, %f149;
	mul.ftz.f32 	%f31, %f196, %f149;
	mul.ftz.f32 	%f32, %f197, %f149;
	mul.ftz.f32 	%f33, %f198, %f149;
	mul.ftz.f32 	%f34, %f199, %f149;
	mul.ftz.f32 	%f35, %f200, %f149;
	mul.ftz.f32 	%f36, %f201, %f149;
	mul.ftz.f32 	%f37, %f202, %f149;
	mul.ftz.f32 	%f38, %f203, %f149;
	div.approx.ftz.f32 	%f39, %f204, %f148;
	div.approx.ftz.f32 	%f40, %f28, %f148;
	ld.global.u32 	%r10, [frame_number];
	setp.gt.u32	%p2, %r10, 1;
	@%p2 bra 	BB8_5;
	bra.uni 	BB8_4;

BB8_5:
	cvt.rn.f32.u32	%f150, %r10;
	rcp.approx.ftz.f32 	%f151, %f150;
	add.ftz.f32 	%f152, %f150, 0fBF800000;
	mul.ftz.f32 	%f153, %f151, %f152;
	mov.u64 	%rd109, 0;
	// inline asm
	call (%rd50), _rt_buffer_get_64, (%rd7, %r11, %r12, %rd2, %rd1, %rd109, %rd109);
	// inline asm
	ld.v4.f32 	{%f154, %f155, %f156, %f157}, [%rd50];
	// inline asm
	call (%rd56), _rt_buffer_get_64, (%rd7, %r11, %r12, %rd2, %rd1, %rd109, %rd109);
	// inline asm
	mul.ftz.f32 	%f162, %f153, %f154;
	mul.ftz.f32 	%f163, %f153, %f155;
	mul.ftz.f32 	%f164, %f153, %f156;
	mul.ftz.f32 	%f165, %f153, %f157;
	fma.rn.ftz.f32 	%f166, %f32, %f151, %f165;
	fma.rn.ftz.f32 	%f167, %f31, %f151, %f164;
	fma.rn.ftz.f32 	%f168, %f30, %f151, %f163;
	fma.rn.ftz.f32 	%f169, %f29, %f151, %f162;
	st.v4.f32 	[%rd56], {%f169, %f168, %f167, %f166};
	mov.u64 	%rd111, output_buffer_nrm;
	cvta.global.u64 	%rd63, %rd111;
	mov.u32 	%r117, 12;
	// inline asm
	call (%rd62), _rt_buffer_get_64, (%rd63, %r11, %r117, %rd2, %rd1, %rd109, %rd109);
	// inline asm
	ld.f32 	%f170, [%rd62+8];
	ld.f32 	%f171, [%rd62+4];
	ld.f32 	%f172, [%rd62];
	// inline asm
	call (%rd68), _rt_buffer_get_64, (%rd63, %r11, %r117, %rd2, %rd1, %rd109, %rd109);
	// inline asm
	mul.ftz.f32 	%f173, %f153, %f172;
	mul.ftz.f32 	%f174, %f153, %f171;
	mul.ftz.f32 	%f175, %f153, %f170;
	fma.rn.ftz.f32 	%f176, %f33, %f151, %f173;
	fma.rn.ftz.f32 	%f177, %f34, %f151, %f174;
	fma.rn.ftz.f32 	%f178, %f35, %f151, %f175;
	st.f32 	[%rd68+8], %f178;
	st.f32 	[%rd68+4], %f177;
	st.f32 	[%rd68], %f176;
	mov.u64 	%rd112, output_buffer_world;
	cvta.global.u64 	%rd75, %rd112;
	// inline asm
	call (%rd74), _rt_buffer_get_64, (%rd75, %r11, %r117, %rd2, %rd1, %rd109, %rd109);
	// inline asm
	ld.f32 	%f179, [%rd74+8];
	ld.f32 	%f180, [%rd74+4];
	ld.f32 	%f181, [%rd74];
	// inline asm
	call (%rd80), _rt_buffer_get_64, (%rd75, %r11, %r117, %rd2, %rd1, %rd109, %rd109);
	// inline asm
	mul.ftz.f32 	%f182, %f153, %f181;
	mul.ftz.f32 	%f183, %f153, %f180;
	mul.ftz.f32 	%f184, %f153, %f179;
	fma.rn.ftz.f32 	%f185, %f36, %f151, %f182;
	fma.rn.ftz.f32 	%f186, %f37, %f151, %f183;
	fma.rn.ftz.f32 	%f187, %f38, %f151, %f184;
	st.f32 	[%rd80+8], %f187;
	st.f32 	[%rd80+4], %f186;
	st.f32 	[%rd80], %f185;
	mov.u64 	%rd113, output_buffer_depth;
	cvta.global.u64 	%rd87, %rd113;
	mov.u32 	%r125, 4;
	// inline asm
	call (%rd86), _rt_buffer_get_64, (%rd87, %r11, %r125, %rd2, %rd1, %rd109, %rd109);
	// inline asm
	ld.f32 	%f188, [%rd86];
	mul.ftz.f32 	%f189, %f153, %f188;
	fma.rn.ftz.f32 	%f190, %f39, %f151, %f189;
	// inline asm
	call (%rd92), _rt_buffer_get_64, (%rd87, %r11, %r125, %rd2, %rd1, %rd109, %rd109);
	// inline asm
	st.f32 	[%rd92], %f190;
	mov.u64 	%rd114, output_buffer_trap;
	cvta.global.u64 	%rd99, %rd114;
	// inline asm
	call (%rd98), _rt_buffer_get_64, (%rd99, %r11, %r125, %rd2, %rd1, %rd109, %rd109);
	// inline asm
	ld.f32 	%f191, [%rd98];
	mul.ftz.f32 	%f192, %f153, %f191;
	fma.rn.ftz.f32 	%f193, %f40, %f151, %f192;
	// inline asm
	call (%rd104), _rt_buffer_get_64, (%rd99, %r11, %r125, %rd2, %rd1, %rd109, %rd109);
	// inline asm
	st.f32 	[%rd104], %f193;
	bra.uni 	BB8_6;

BB8_4:
	mov.u64 	%rd44, 0;
	// inline asm
	call (%rd15), _rt_buffer_get_64, (%rd7, %r11, %r12, %rd2, %rd1, %rd44, %rd44);
	// inline asm
	st.v4.f32 	[%rd15], {%f29, %f30, %f31, %f32};
	mov.u64 	%rd46, output_buffer_nrm;
	cvta.global.u64 	%rd22, %rd46;
	mov.u32 	%r101, 12;
	// inline asm
	call (%rd21), _rt_buffer_get_64, (%rd22, %r11, %r101, %rd2, %rd1, %rd44, %rd44);
	// inline asm
	st.f32 	[%rd21+8], %f35;
	st.f32 	[%rd21+4], %f34;
	st.f32 	[%rd21], %f33;
	mov.u64 	%rd47, output_buffer_world;
	cvta.global.u64 	%rd28, %rd47;
	// inline asm
	call (%rd27), _rt_buffer_get_64, (%rd28, %r11, %r101, %rd2, %rd1, %rd44, %rd44);
	// inline asm
	st.f32 	[%rd27+8], %f38;
	st.f32 	[%rd27+4], %f37;
	st.f32 	[%rd27], %f36;
	mov.u64 	%rd48, output_buffer_depth;
	cvta.global.u64 	%rd34, %rd48;
	mov.u32 	%r105, 4;
	// inline asm
	call (%rd33), _rt_buffer_get_64, (%rd34, %r11, %r105, %rd2, %rd1, %rd44, %rd44);
	// inline asm
	st.f32 	[%rd33], %f39;
	mov.u64 	%rd49, output_buffer_trap;
	cvta.global.u64 	%rd40, %rd49;
	// inline asm
	call (%rd39), _rt_buffer_get_64, (%rd40, %r11, %r105, %rd2, %rd1, %rd44, %rd44);
	// inline asm
	st.f32 	[%rd39], %f40;

BB8_6:
	ret;
}

	// .globl	_Z9intersecti
.visible .entry _Z9intersecti(
	.param .u32 _Z9intersecti_param_0
)
{
	.reg .pred 	%p<16>;
	.reg .f32 	%f<100>;
	.reg .s32 	%r<18>;
	.reg .s64 	%rd<8>;


	mov.u32 	%r17, 0;
	st.global.u32 	[normal+8], %r17;
	mov.f32 	%f95, 0f00000000;
	st.global.v2.f32 	[normal], {%f95, %f95};
	ld.global.v2.f32 	{%f33, %f34}, [ray];
	ld.global.f32 	%f3, [ray+8];
	mul.ftz.f32 	%f35, %f34, %f34;
	fma.rn.ftz.f32 	%f36, %f33, %f33, %f35;
	fma.rn.ftz.f32 	%f4, %f3, %f3, %f36;
	sqrt.approx.ftz.f32 	%f37, %f4;
	mov.f32 	%f38, 0f42C80000;
	sqrt.approx.ftz.f32 	%f39, %f38;
	mov.pred 	%p2, 0;
	mov.f32 	%f94, 0f6C4ECB8F;
	setp.le.ftz.f32	%p3, %f37, %f39;
	mov.pred 	%p15, %p2;
	@%p3 bra 	BB9_3;

	ld.global.f32 	%f42, [ray+20];
	ld.global.f32 	%f43, [ray+12];
	ld.global.f32 	%f44, [ray+16];
	mul.ftz.f32 	%f45, %f34, %f44;
	fma.rn.ftz.f32 	%f46, %f33, %f43, %f45;
	fma.rn.ftz.f32 	%f5, %f3, %f42, %f46;
	mul.ftz.f32 	%f47, %f5, %f5;
	add.ftz.f32 	%f48, %f4, 0fC2C80000;
	sub.ftz.f32 	%f6, %f47, %f48;
	mov.pred 	%p4, -1;
	mov.f32 	%f95, 0f00000000;
	mov.f32 	%f94, %f95;
	setp.leu.ftz.f32	%p5, %f6, 0f00000000;
	mov.pred 	%p15, %p4;
	@%p5 bra 	BB9_3;

	sqrt.approx.ftz.f32 	%f49, %f6;
	neg.ftz.f32 	%f50, %f5;
	sub.ftz.f32 	%f95, %f50, %f49;
	sub.ftz.f32 	%f51, %f49, %f5;
	setp.gt.ftz.f32	%p7, %f95, %f51;
	selp.f32	%f94, %f95, %f51, %p7;
	mov.pred 	%p15, %p2;

BB9_3:
	@%p15 bra 	BB9_11;

	ld.global.f32 	%f13, [ray+20];
	ld.global.f32 	%f12, [ray+16];
	ld.global.f32 	%f11, [ray+12];
	fma.rn.ftz.f32 	%f98, %f95, %f11, %f33;
	fma.rn.ftz.f32 	%f97, %f95, %f12, %f34;
	fma.rn.ftz.f32 	%f96, %f95, %f13, %f3;
	mov.f32 	%f99, 0f501502F9;

BB9_5:
	ld.global.u32 	%r6, [max_iterations];
	ld.global.f32 	%f53, [global_t];
	ld.global.u32 	%r5, [do_work];
	// inline asm
	call (%rd1), _rt_callable_program_from_id_64, (%r5);
	// inline asm
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .align 4 .b8 param0[12];
	st.param.f32	[param0+0], %f98;
	st.param.f32	[param0+4], %f97;
	st.param.f32	[param0+8], %f96;
	.param .b32 param1;
	st.param.b32	[param1+0], %r6;
	.param .b32 param2;
	st.param.f32	[param2+0], %f53;
	.param .align 8 .b8 retval0[8];
	prototype_0 : .callprototype (.param .align 8 .b8 _[8]) _ (.param .align 4 .b8 _[12], .param .b32 _, .param .b32 _);
	call (retval0), 
	%rd1, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_0;
	ld.param.f32	%f24, [retval0+0];
	ld.param.f32	%f23, [retval0+4];
	
	//{
	}// Callseq End 0
	fma.rn.ftz.f32 	%f98, %f11, %f24, %f98;
	fma.rn.ftz.f32 	%f97, %f12, %f24, %f97;
	fma.rn.ftz.f32 	%f96, %f13, %f24, %f96;
	fma.rn.ftz.f32 	%f95, %f24, 0f3F7D70A4, %f95;
	setp.lt.ftz.f32	%p8, %f24, 0f3A83126F;
	setp.gt.ftz.f32	%p9, %f95, %f94;
	or.pred  	%p10, %p8, %p9;
	@%p10 bra 	BB9_7;

	min.ftz.f32 	%f99, %f99, %f23;
	add.s32 	%r17, %r17, 1;
	setp.lt.u32	%p11, %r17, 800;
	@%p11 bra 	BB9_5;
	bra.uni 	BB9_8;

BB9_7:
	st.global.u32 	[iterations], %r17;

BB9_8:
	setp.geu.ftz.f32	%p12, %f24, 0f3A83126F;
	@%p12 bra 	BB9_11;

	// inline asm
	call (%r7), _rt_potential_intersection, (%f95);
	// inline asm
	setp.eq.s32	%p13, %r7, 0;
	@%p13 bra 	BB9_11;

	ld.global.f32 	%f55, [DEL];
	add.ftz.f32 	%f56, %f98, %f55;
	add.ftz.f32 	%f57, %f97, 0f00000000;
	add.ftz.f32 	%f58, %f96, 0f00000000;
	ld.global.f32 	%f59, [global_t];
	ld.global.u32 	%r8, [do_work];
	// inline asm
	call (%rd2), _rt_callable_program_from_id_64, (%r8);
	// inline asm
	mov.u32 	%r16, 14;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .align 4 .b8 param0[12];
	st.param.f32	[param0+0], %f56;
	st.param.f32	[param0+4], %f57;
	st.param.f32	[param0+8], %f58;
	.param .b32 param1;
	st.param.b32	[param1+0], %r16;
	.param .b32 param2;
	st.param.f32	[param2+0], %f59;
	.param .align 8 .b8 retval0[8];
	prototype_1 : .callprototype (.param .align 8 .b8 _[8]) _ (.param .align 4 .b8 _[12], .param .b32 _, .param .b32 _);
	call (retval0), 
	%rd2, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_1;
	ld.param.f32	%f60, [retval0+0];
	ld.param.f32	%f61, [retval0+4];
	
	//{
	}// Callseq End 1
	sub.ftz.f32 	%f62, %f98, %f55;
	ld.global.f32 	%f63, [global_t];
	ld.global.u32 	%r9, [do_work];
	// inline asm
	call (%rd3), _rt_callable_program_from_id_64, (%r9);
	// inline asm
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .align 4 .b8 param0[12];
	st.param.f32	[param0+0], %f62;
	st.param.f32	[param0+4], %f97;
	st.param.f32	[param0+8], %f96;
	.param .b32 param1;
	st.param.b32	[param1+0], %r16;
	.param .b32 param2;
	st.param.f32	[param2+0], %f63;
	.param .align 8 .b8 retval0[8];
	prototype_2 : .callprototype (.param .align 8 .b8 _[8]) _ (.param .align 4 .b8 _[12], .param .b32 _, .param .b32 _);
	call (retval0), 
	%rd3, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_2;
	ld.param.f32	%f64, [retval0+0];
	ld.param.f32	%f65, [retval0+4];
	
	//{
	}// Callseq End 2
	sub.ftz.f32 	%f66, %f60, %f64;
	add.ftz.f32 	%f67, %f97, %f55;
	add.ftz.f32 	%f68, %f98, 0f00000000;
	ld.global.f32 	%f69, [global_t];
	ld.global.u32 	%r10, [do_work];
	// inline asm
	call (%rd4), _rt_callable_program_from_id_64, (%r10);
	// inline asm
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .align 4 .b8 param0[12];
	st.param.f32	[param0+0], %f68;
	st.param.f32	[param0+4], %f67;
	st.param.f32	[param0+8], %f58;
	.param .b32 param1;
	st.param.b32	[param1+0], %r16;
	.param .b32 param2;
	st.param.f32	[param2+0], %f69;
	.param .align 8 .b8 retval0[8];
	prototype_3 : .callprototype (.param .align 8 .b8 _[8]) _ (.param .align 4 .b8 _[12], .param .b32 _, .param .b32 _);
	call (retval0), 
	%rd4, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_3;
	ld.param.f32	%f70, [retval0+0];
	ld.param.f32	%f71, [retval0+4];
	
	//{
	}// Callseq End 3
	sub.ftz.f32 	%f72, %f97, %f55;
	ld.global.f32 	%f73, [global_t];
	ld.global.u32 	%r11, [do_work];
	// inline asm
	call (%rd5), _rt_callable_program_from_id_64, (%r11);
	// inline asm
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .align 4 .b8 param0[12];
	st.param.f32	[param0+0], %f98;
	st.param.f32	[param0+4], %f72;
	st.param.f32	[param0+8], %f96;
	.param .b32 param1;
	st.param.b32	[param1+0], %r16;
	.param .b32 param2;
	st.param.f32	[param2+0], %f73;
	.param .align 8 .b8 retval0[8];
	prototype_4 : .callprototype (.param .align 8 .b8 _[8]) _ (.param .align 4 .b8 _[12], .param .b32 _, .param .b32 _);
	call (retval0), 
	%rd5, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_4;
	ld.param.f32	%f74, [retval0+0];
	ld.param.f32	%f75, [retval0+4];
	
	//{
	}// Callseq End 4
	sub.ftz.f32 	%f76, %f70, %f74;
	add.ftz.f32 	%f77, %f96, %f55;
	ld.global.f32 	%f78, [global_t];
	ld.global.u32 	%r12, [do_work];
	// inline asm
	call (%rd6), _rt_callable_program_from_id_64, (%r12);
	// inline asm
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .align 4 .b8 param0[12];
	st.param.f32	[param0+0], %f68;
	st.param.f32	[param0+4], %f57;
	st.param.f32	[param0+8], %f77;
	.param .b32 param1;
	st.param.b32	[param1+0], %r16;
	.param .b32 param2;
	st.param.f32	[param2+0], %f78;
	.param .align 8 .b8 retval0[8];
	prototype_5 : .callprototype (.param .align 8 .b8 _[8]) _ (.param .align 4 .b8 _[12], .param .b32 _, .param .b32 _);
	call (retval0), 
	%rd6, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_5;
	ld.param.f32	%f79, [retval0+0];
	ld.param.f32	%f80, [retval0+4];
	
	//{
	}// Callseq End 5
	sub.ftz.f32 	%f81, %f96, %f55;
	ld.global.f32 	%f82, [global_t];
	ld.global.u32 	%r13, [do_work];
	// inline asm
	call (%rd7), _rt_callable_program_from_id_64, (%r13);
	// inline asm
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .align 4 .b8 param0[12];
	st.param.f32	[param0+0], %f98;
	st.param.f32	[param0+4], %f97;
	st.param.f32	[param0+8], %f81;
	.param .b32 param1;
	st.param.b32	[param1+0], %r16;
	.param .b32 param2;
	st.param.f32	[param2+0], %f82;
	.param .align 8 .b8 retval0[8];
	prototype_6 : .callprototype (.param .align 8 .b8 _[8]) _ (.param .align 4 .b8 _[12], .param .b32 _, .param .b32 _);
	call (retval0), 
	%rd7, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_6;
	ld.param.f32	%f83, [retval0+0];
	ld.param.f32	%f84, [retval0+4];
	
	//{
	}// Callseq End 6
	sub.ftz.f32 	%f85, %f79, %f83;
	mul.ftz.f32 	%f86, %f76, %f76;
	fma.rn.ftz.f32 	%f87, %f66, %f66, %f86;
	fma.rn.ftz.f32 	%f88, %f85, %f85, %f87;
	sqrt.approx.ftz.f32 	%f89, %f88;
	rcp.approx.ftz.f32 	%f90, %f89;
	mul.ftz.f32 	%f91, %f85, %f90;
	mul.ftz.f32 	%f92, %f76, %f90;
	mul.ftz.f32 	%f93, %f66, %f90;
	st.global.v2.f32 	[normal], {%f93, %f92};
	st.global.f32 	[normal+8], %f91;
	st.global.f32 	[smallestdistance], %f99;
	st.global.v2.f32 	[geometric_normal], {%f93, %f92};
	st.global.f32 	[geometric_normal+8], %f91;
	st.global.v2.f32 	[shading_normal], {%f93, %f92};
	st.global.f32 	[shading_normal+8], %f91;
	mov.u32 	%r15, 0;
	// inline asm
	call (%r14), _rt_report_intersection, (%r15);
	// inline asm

BB9_11:
	ret;
}

	// .globl	_Z6boundsiPf
.visible .entry _Z6boundsiPf(
	.param .u32 _Z6boundsiPf_param_0,
	.param .u64 _Z6boundsiPf_param_1
)
{
	.reg .s32 	%r<3>;
	.reg .s64 	%rd<3>;


	ld.param.u64 	%rd1, [_Z6boundsiPf_param_1];
	cvta.to.global.u64 	%rd2, %rd1;
	mov.u32 	%r1, -1078774989;
	st.global.u32 	[%rd2+8], %r1;
	st.global.u32 	[%rd2+4], %r1;
	st.global.u32 	[%rd2], %r1;
	mov.u32 	%r2, 1068708659;
	st.global.u32 	[%rd2+20], %r2;
	st.global.u32 	[%rd2+16], %r2;
	st.global.u32 	[%rd2+12], %r2;
	ret;
}

	// .globl	_Z14diffuseEmitterv
.visible .entry _Z14diffuseEmitterv(

)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<6>;
	.reg .s32 	%r<4>;
	.reg .s64 	%rd<6>;


	mov.u64 	%rd1, current_prd;
	add.s64 	%rd2, %rd1, 104;
	ldu.global.u32 	%r1, [%rd2];
	setp.eq.s32	%p1, %r1, 0;
	@%p1 bra 	BB11_2;

	mov.u64 	%rd3, emission_color;
	add.s64 	%rd4, %rd3, 4;
	add.s64 	%rd5, %rd3, 8;
	ldu.global.f32 	%f1, [%rd5];
	ldu.global.f32 	%f2, [%rd4];
	ldu.global.f32 	%f3, [emission_color];
	mov.f32 	%f4, 0f3F800000;
	st.global.v4.f32 	[current_prd], {%f3, %f2, %f1, %f4};
	mov.u32 	%r2, 0;
	st.global.u32 	[current_prd+24], %r2;
	mov.f32 	%f5, 0f00000000;
	st.global.v2.f32 	[current_prd+16], {%f5, %f5};

BB11_2:
	mov.u32 	%r3, 1;
	st.global.u32 	[current_prd+108], %r3;
	ret;
}

	// .globl	_Z6shadowv
.visible .entry _Z6shadowv(

)
{
	.reg .s16 	%rs<2>;


	mov.u16 	%rs1, 1;
	st.global.u8 	[current_prd_shadow], %rs1;
	// inline asm
	call _rt_terminate_ray, ();
	// inline asm
	ret;
}

	// .globl	_Z7diffusev
.visible .entry _Z7diffusev(

)
{
	.local .align 8 .b8 	__local_depot13[24];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<9>;
	.reg .s16 	%rs<3>;
	.reg .f32 	%f<289>;
	.reg .s32 	%r<46>;
	.reg .f64 	%fd<14>;
	.reg .s64 	%rd<30>;


	mov.u64 	%rd29, __local_depot13;
	cvta.local.u64 	%SP, %rd29;
	mov.u64 	%rd10, shading_normal;
	ldu.global.v2.f32 	{%f60, %f61}, [shading_normal];
	add.s64 	%rd11, %rd10, 8;
	ldu.global.f32 	%f47, [%rd11];
	mov.u32 	%r6, 7937;
	mov.f32 	%f288, 0f00000000;
	// inline asm
	call (%f41, %f42, %f43, %f44), _rt_transform_tuple, (%r6, %f60, %f61, %f47, %f288);
	// inline asm
	mul.ftz.f32 	%f62, %f42, %f42;
	fma.rn.ftz.f32 	%f63, %f41, %f41, %f62;
	fma.rn.ftz.f32 	%f64, %f43, %f43, %f63;
	sqrt.approx.ftz.f32 	%f65, %f64;
	rcp.approx.ftz.f32 	%f66, %f65;
	mul.ftz.f32 	%f67, %f41, %f66;
	mul.ftz.f32 	%f68, %f42, %f66;
	mul.ftz.f32 	%f69, %f43, %f66;
	ld.global.v2.f32 	{%f70, %f71}, [geometric_normal];
	ld.global.f32 	%f55, [geometric_normal+8];
	// inline asm
	call (%f49, %f50, %f51, %f52), _rt_transform_tuple, (%r6, %f70, %f71, %f55, %f288);
	// inline asm
	mul.ftz.f32 	%f72, %f50, %f50;
	fma.rn.ftz.f32 	%f73, %f49, %f49, %f72;
	fma.rn.ftz.f32 	%f74, %f51, %f51, %f73;
	sqrt.approx.ftz.f32 	%f75, %f74;
	rcp.approx.ftz.f32 	%f76, %f75;
	mul.ftz.f32 	%f77, %f49, %f76;
	mul.ftz.f32 	%f78, %f50, %f76;
	mul.ftz.f32 	%f79, %f51, %f76;
	ld.global.v2.f32 	{%f80, %f81}, [ray+8];
	mul.ftz.f32 	%f84, %f81, %f77;
	ld.global.v2.f32 	{%f85, %f86}, [ray+16];
	mul.ftz.f32 	%f88, %f78, %f85;
	neg.ftz.f32 	%f89, %f88;
	sub.ftz.f32 	%f90, %f89, %f84;
	mul.ftz.f32 	%f92, %f79, %f86;
	sub.ftz.f32 	%f93, %f90, %f92;
	mov.b32 	 %r9, %f93;
	and.b32  	%r10, %r9, -2147483648;
	or.b32  	%r11, %r10, 1065353216;
	mov.b32 	 %f94, %r11;
	mul.ftz.f32 	%f1, %f67, %f94;
	mul.ftz.f32 	%f2, %f68, %f94;
	mul.ftz.f32 	%f3, %f69, %f94;
	ld.global.f32 	%f95, [t_hit];
	ld.global.v2.f32 	{%f96, %f97}, [ray];
	fma.rn.ftz.f32 	%f4, %f95, %f81, %f96;
	fma.rn.ftz.f32 	%f5, %f95, %f85, %f97;
	fma.rn.ftz.f32 	%f6, %f95, %f86, %f80;
	ld.global.u32 	%r12, [current_prd+96];
	mad.lo.s32 	%r13, %r12, 389569705, 1196435762;
	st.global.u32 	[current_prd+96], %r13;
	cvt.rn.f32.u32	%f100, %r13;
	add.ftz.f32 	%f101, %f79, 0f3F800000;
	mul.ftz.f32 	%f102, %f77, %f77;
	sub.ftz.f32 	%f103, %f101, %f102;
	mul.ftz.f32 	%f104, %f78, %f78;
	sub.ftz.f32 	%f105, %f101, %f104;
	mul.ftz.f32 	%f106, %f77, %f78;
	rcp.approx.ftz.f32 	%f107, %f101;
	mul.ftz.f32 	%f108, %f103, %f107;
	mul.ftz.f32 	%f109, %f105, %f107;
	mul.ftz.f32 	%f110, %f106, %f107;
	cvt.ftz.f64.f32	%fd1, %f100;
	add.f64 	%fd2, %fd1, 0d40538EE978D4FDF4;
	cvt.rn.ftz.f32.f64	%f111, %fd2;
	sin.approx.ftz.f32 	%f112, %f111;
	cvt.ftz.f64.f32	%fd3, %f112;
	mul.f64 	%fd4, %fd3, 0d40E55DD17318FC50;
	cvt.rn.ftz.f32.f64	%f113, %fd4;
	cvt.rmi.ftz.f32.f32	%f114, %f113;
	sub.ftz.f32 	%f115, %f113, %f114;
	add.f64 	%fd5, %fd1, 0d4025BEF9DB22D0E5;
	cvt.rn.ftz.f32.f64	%f116, %fd5;
	sin.approx.ftz.f32 	%f117, %f116;
	cvt.ftz.f64.f32	%fd6, %f117;
	mul.f64 	%fd7, %fd6, 0d40E55DD17318FC50;
	cvt.rn.ftz.f32.f64	%f118, %fd7;
	cvt.rmi.ftz.f32.f32	%f119, %f118;
	sub.ftz.f32 	%f120, %f118, %f119;
	cvt.ftz.f64.f32	%fd8, %f120;
	mul.f64 	%fd9, %fd8, 0d401921FB3FA6DEFC;
	cvt.rn.ftz.f32.f64	%f121, %fd9;
	sqrt.approx.ftz.f32 	%f122, %f115;
	cos.approx.ftz.f32 	%f123, %f121;
	mul.ftz.f32 	%f124, %f108, %f123;
	mul.ftz.f32 	%f125, %f123, %f110;
	mul.ftz.f32 	%f126, %f77, %f123;
	sin.approx.ftz.f32 	%f127, %f121;
	mul.ftz.f32 	%f128, %f127, %f110;
	mul.ftz.f32 	%f129, %f109, %f127;
	mul.ftz.f32 	%f130, %f78, %f127;
	neg.ftz.f32 	%f131, %f130;
	sub.ftz.f32 	%f132, %f124, %f128;
	sub.ftz.f32 	%f133, %f129, %f125;
	sub.ftz.f32 	%f134, %f131, %f126;
	mul.ftz.f32 	%f135, %f122, %f134;
	cvt.ftz.f64.f32	%fd10, %f115;
	mov.f64 	%fd11, 0d3FF0000000000000;
	sub.f64 	%fd12, %fd11, %fd10;
	sqrt.rn.f64 	%fd13, %fd12;
	cvt.rn.ftz.f32.f64	%f136, %fd13;
	mul.ftz.f32 	%f137, %f77, %f136;
	mul.ftz.f32 	%f138, %f78, %f136;
	fma.rn.ftz.f32 	%f139, %f79, %f136, %f135;
	fma.rn.ftz.f32 	%f140, %f122, %f133, %f138;
	fma.rn.ftz.f32 	%f141, %f122, %f132, %f137;
	mov.u32 	%r45, 0;
	st.global.u32 	[current_prd+104], %r45;
	st.global.v2.f32 	[current_prd+72], {%f141, %f140};
	st.global.f32 	[current_prd+80], %f139;
	ld.global.v2.f32 	{%f142, %f143}, [diffuse_color];
	ld.global.f32 	%f146, [diffuse_color+8];
	st.global.f32 	[current_prd+92], %f146;
	st.global.f32 	[current_prd+88], %f143;
	st.global.f32 	[current_prd+84], %f142;
	mov.u64 	%rd12, lights;
	cvta.global.u64 	%rd9, %rd12;
	mov.u32 	%r7, 1;
	mov.u32 	%r8, 64;
	// inline asm
	call (%rd5, %rd6, %rd7, %rd8), _rt_buffer_get_size_64, (%rd9, %r7, %r8);
	// inline asm
	cvt.u32.u64	%r1, %rd5;
	setp.eq.s32	%p1, %r1, 0;
	mov.f32 	%f287, %f288;
	mov.f32 	%f286, %f288;
	@%p1 bra 	BB13_8;

	add.u64 	%rd2, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd2;
	mul.ftz.f32 	%f150, %f2, 0f00000000;
	sub.ftz.f32 	%f151, %f150, %f3;
	mul.ftz.f32 	%f152, %f3, 0f00000000;
	mul.ftz.f32 	%f153, %f1, 0f00000000;
	sub.ftz.f32 	%f154, %f152, %f153;
	sub.ftz.f32 	%f155, %f1, %f150;
	mul.ftz.f32 	%f156, %f154, %f154;
	fma.rn.ftz.f32 	%f157, %f151, %f151, %f156;
	fma.rn.ftz.f32 	%f158, %f155, %f155, %f157;
	setp.lt.ftz.f32	%p2, %f158, 0f3A83126F;
	sub.ftz.f32 	%f159, %f150, %f152;
	sub.ftz.f32 	%f160, %f3, %f153;
	sub.ftz.f32 	%f161, %f153, %f2;
	selp.f32	%f162, %f159, %f151, %p2;
	selp.f32	%f163, %f160, %f154, %p2;
	selp.f32	%f164, %f161, %f155, %p2;
	mul.ftz.f32 	%f165, %f163, %f163;
	fma.rn.ftz.f32 	%f166, %f162, %f162, %f165;
	fma.rn.ftz.f32 	%f167, %f164, %f164, %f166;
	sqrt.approx.ftz.f32 	%f168, %f167;
	rcp.approx.ftz.f32 	%f169, %f168;
	mul.ftz.f32 	%f7, %f162, %f169;
	mul.ftz.f32 	%f8, %f163, %f169;
	mul.ftz.f32 	%f9, %f164, %f169;
	mul.ftz.f32 	%f170, %f2, %f9;
	mul.ftz.f32 	%f171, %f3, %f8;
	sub.ftz.f32 	%f10, %f170, %f171;
	mul.ftz.f32 	%f172, %f3, %f7;
	mul.ftz.f32 	%f173, %f1, %f9;
	sub.ftz.f32 	%f11, %f172, %f173;
	mul.ftz.f32 	%f174, %f1, %f8;
	mul.ftz.f32 	%f175, %f2, %f7;
	sub.ftz.f32 	%f12, %f174, %f175;
	mov.f32 	%f288, 0f00000000;
	mov.f32 	%f287, %f288;
	mov.f32 	%f286, %f288;
	mov.u64 	%rd28, 0;

BB13_2:
	mov.u64 	%rd27, lights;
	cvta.global.u64 	%rd26, %rd27;
	mov.u64 	%rd24, 0;
	mov.u32 	%r44, 64;
	// inline asm
	call (%rd14), _rt_buffer_get_64, (%rd26, %r7, %r44, %rd28, %rd24, %rd24, %rd24);
	// inline asm
	ld.f32 	%f18, [%rd14+56];
	ld.f32 	%f17, [%rd14+52];
	ld.f32 	%f16, [%rd14+48];
	ld.f32 	%f176, [%rd14+44];
	ld.f32 	%f177, [%rd14+36];
	ld.f32 	%f178, [%rd14+40];
	ld.f32 	%f179, [%rd14+32];
	ld.f32 	%f180, [%rd14+28];
	ld.f32 	%f181, [%rd14+24];
	ld.f32 	%f182, [%rd14+20];
	ld.f32 	%f183, [%rd14+8];
	ld.f32 	%f184, [%rd14+16];
	ld.f32 	%f185, [%rd14+4];
	ld.f32 	%f186, [%rd14+12];
	ld.f32 	%f187, [%rd14];
	ld.global.u32 	%r18, [current_prd+96];
	mad.lo.s32 	%r19, %r18, 1664525, 1013904223;
	and.b32  	%r20, %r19, 16777215;
	cvt.rn.f32.u32	%f188, %r20;
	mov.f32 	%f189, 0f4B800000;
	div.approx.ftz.f32 	%f190, %f188, %f189;
	mad.lo.s32 	%r3, %r19, 1664525, 1013904223;
	st.global.u32 	[current_prd+96], %r3;
	and.b32  	%r21, %r3, 16777215;
	cvt.rn.f32.u32	%f191, %r21;
	div.approx.ftz.f32 	%f192, %f191, %f189;
	fma.rn.ftz.f32 	%f193, %f186, %f190, %f187;
	fma.rn.ftz.f32 	%f194, %f184, %f190, %f185;
	fma.rn.ftz.f32 	%f195, %f182, %f190, %f183;
	fma.rn.ftz.f32 	%f196, %f181, %f192, %f193;
	fma.rn.ftz.f32 	%f197, %f180, %f192, %f194;
	fma.rn.ftz.f32 	%f198, %f179, %f192, %f195;
	sub.ftz.f32 	%f199, %f196, %f4;
	sub.ftz.f32 	%f200, %f197, %f5;
	sub.ftz.f32 	%f201, %f198, %f6;
	mul.ftz.f32 	%f202, %f200, %f200;
	fma.rn.ftz.f32 	%f203, %f199, %f199, %f202;
	fma.rn.ftz.f32 	%f204, %f201, %f201, %f203;
	sqrt.approx.ftz.f32 	%f19, %f204;
	rcp.approx.ftz.f32 	%f205, %f19;
	mul.ftz.f32 	%f20, %f205, %f199;
	mul.ftz.f32 	%f21, %f205, %f200;
	mul.ftz.f32 	%f22, %f205, %f201;
	ld.global.v2.f32 	{%f206, %f207}, [shading_normal];
	mul.ftz.f32 	%f208, %f207, %f21;
	fma.rn.ftz.f32 	%f209, %f206, %f20, %f208;
	ld.global.f32 	%f25, [shading_normal+8];
	fma.rn.ftz.f32 	%f26, %f22, %f25, %f209;
	mul.ftz.f32 	%f210, %f178, %f21;
	fma.rn.ftz.f32 	%f211, %f177, %f20, %f210;
	fma.rn.ftz.f32 	%f27, %f176, %f22, %f211;
	mul.ftz.f32 	%f212, %f184, %f179;
	mul.ftz.f32 	%f213, %f182, %f180;
	sub.ftz.f32 	%f214, %f212, %f213;
	mul.ftz.f32 	%f215, %f182, %f181;
	mul.ftz.f32 	%f216, %f186, %f179;
	sub.ftz.f32 	%f217, %f215, %f216;
	mul.ftz.f32 	%f218, %f186, %f180;
	mul.ftz.f32 	%f219, %f184, %f181;
	sub.ftz.f32 	%f220, %f218, %f219;
	mul.ftz.f32 	%f221, %f217, %f217;
	fma.rn.ftz.f32 	%f222, %f214, %f214, %f221;
	fma.rn.ftz.f32 	%f28, %f220, %f220, %f222;
	setp.gt.ftz.f32	%p3, %f26, 0f00000000;
	setp.gt.ftz.f32	%p4, %f27, 0f00000000;
	and.pred  	%p5, %p3, %p4;
	@!%p5 bra 	BB13_7;
	bra.uni 	BB13_3;

BB13_3:
	add.u64 	%rd25, %SP, 0;
	mov.u16 	%rs1, 0;
	st.local.u8 	[%rd1], %rs1;
	mov.u32 	%r25, 0;
	st.local.u32 	[%rd1+16], %r25;
	st.local.u32 	[%rd1+4], %r25;
	st.local.u32 	[%rd1+8], %r25;
	st.local.u32 	[%rd1+12], %r25;
	ld.global.u32 	%r26, [frame_number];
	add.s32 	%r27, %r26, %r3;
	st.local.u32 	[%rd1+20], %r27;
	fma.rn.ftz.f32 	%f223, %f206, 0f38D1B717, %f4;
	fma.rn.ftz.f32 	%f224, %f207, 0f38D1B717, %f5;
	fma.rn.ftz.f32 	%f225, %f25, 0f38D1B717, %f6;
	ld.global.u32 	%r23, [pathtrace_shadow_ray_type];
	ld.global.f32 	%f229, [scene_epsilon];
	ld.global.u32 	%r22, [top_shadower];
	mov.u32 	%r24, 24;
	// inline asm
	call _rt_trace_64, (%r22, %f223, %f224, %f225, %f20, %f21, %f22, %r23, %f229, %f19, %rd25, %r24);
	// inline asm
	ld.local.u8 	%rs2, [%rd1];
	setp.eq.s16	%p6, %rs2, 0;
	@%p6 bra 	BB13_6;
	bra.uni 	BB13_4;

BB13_6:
	sqrt.approx.ftz.f32 	%f271, %f28;
	mul.ftz.f32 	%f272, %f26, %f27;
	mul.ftz.f32 	%f273, %f271, %f272;
	mul.ftz.f32 	%f274, %f19, 0f40490FDB;
	mul.ftz.f32 	%f275, %f19, %f274;
	div.approx.ftz.f32 	%f276, %f273, %f275;
	fma.rn.ftz.f32 	%f288, %f16, %f276, %f288;
	fma.rn.ftz.f32 	%f287, %f17, %f276, %f287;
	fma.rn.ftz.f32 	%f286, %f18, %f276, %f286;
	bra.uni 	BB13_7;

BB13_4:
	ld.global.u32 	%r28, [current_prd+100];
	setp.gt.s32	%p7, %r28, 2;
	@%p7 bra 	BB13_7;

	mov.f32 	%f285, 0f4B800000;
	mov.u64 	%rd23, current_prd;
	ld.global.v2.u32 	{%r32, %r33}, [current_prd+96];
	mad.lo.s32 	%r35, %r32, 1664525, 1013904223;
	and.b32  	%r36, %r35, 16777215;
	cvt.rn.f32.u32	%f239, %r36;
	div.approx.ftz.f32 	%f241, %f239, %f285;
	mad.lo.s32 	%r37, %r35, 1664525, 1013904223;
	and.b32  	%r38, %r37, 16777215;
	cvt.rn.f32.u32	%f242, %r38;
	div.approx.ftz.f32 	%f243, %f242, %f285;
	sqrt.approx.ftz.f32 	%f244, %f241;
	mul.ftz.f32 	%f245, %f243, 0f40C90FDB;
	cos.approx.ftz.f32 	%f246, %f245;
	mul.ftz.f32 	%f247, %f244, %f246;
	sin.approx.ftz.f32 	%f248, %f245;
	mul.ftz.f32 	%f249, %f244, %f248;
	mul.ftz.f32 	%f250, %f247, %f247;
	mov.f32 	%f251, 0f3F800000;
	sub.ftz.f32 	%f252, %f251, %f250;
	mul.ftz.f32 	%f253, %f249, %f249;
	sub.ftz.f32 	%f254, %f252, %f253;
	mov.f32 	%f255, 0f00000000;
	max.ftz.f32 	%f256, %f255, %f254;
	sqrt.approx.ftz.f32 	%f257, %f256;
	ld.local.f32 	%f233, [%rd1+12];
	ld.local.f32 	%f232, [%rd1+8];
	ld.local.f32 	%f231, [%rd1+4];
	mul.ftz.f32 	%f258, %f249, %f10;
	mul.ftz.f32 	%f259, %f249, %f11;
	mul.ftz.f32 	%f260, %f249, %f12;
	fma.rn.ftz.f32 	%f261, %f247, %f7, %f258;
	fma.rn.ftz.f32 	%f262, %f247, %f8, %f259;
	fma.rn.ftz.f32 	%f263, %f247, %f9, %f260;
	fma.rn.ftz.f32 	%f234, %f1, %f257, %f261;
	fma.rn.ftz.f32 	%f235, %f2, %f257, %f262;
	fma.rn.ftz.f32 	%f236, %f3, %f257, %f263;
	st.global.v4.f32 	[current_prd], {%f255, %f255, %f255, %f255};
	ld.global.u32 	%r39, [frame_number];
	add.s32 	%r40, %r39, %r37;
	add.s32 	%r42, %r33, 1;
	st.global.v2.u32 	[current_prd+96], {%r40, %r42};
	ld.global.u32 	%r30, [pathtrace_ray_type];
	ld.global.f32 	%f237, [scene_epsilon];
	ld.global.u32 	%r29, [top_object];
	cvta.global.u64 	%rd22, %rd23;
	mov.f32 	%f238, 0f6C4ECB8F;
	mov.u32 	%r31, 128;
	// inline asm
	call _rt_trace_64, (%r29, %f231, %f232, %f233, %f234, %f235, %f236, %r30, %f237, %f238, %rd22, %r31);
	// inline asm
	ld.global.v4.f32 	{%f264, %f265, %f266, %f267}, [current_prd];
	add.ftz.f32 	%f288, %f288, %f264;
	add.ftz.f32 	%f287, %f287, %f265;
	add.ftz.f32 	%f286, %f286, %f266;

BB13_7:
	add.s64 	%rd28, %rd28, 1;
	add.s32 	%r45, %r45, 1;
	setp.lt.u32	%p8, %r45, %r1;
	@%p8 bra 	BB13_2;

BB13_8:
	mov.f32 	%f277, 0f3F800000;
	ld.global.f32 	%f278, [smallestdistance];
	st.global.v4.f32 	[current_prd], {%f288, %f287, %f286, %f277};
	ld.global.v2.f32 	{%f279, %f280}, [shading_normal];
	ld.global.f32 	%f283, [shading_normal+8];
	st.global.v4.f32 	[current_prd+16], {%f279, %f280, %f283, %f4};
	st.global.v2.f32 	[current_prd+32], {%f5, %f6};
	ld.global.f32 	%f284, [t_hit];
	st.global.v2.f32 	[current_prd+40], {%f284, %f278};
	st.global.u32 	[current_prd+108], %r7;
	ret;
}

	// .globl	_Z4missv
.visible .entry _Z4missv(

)
{
	.reg .f32 	%f<2>;
	.reg .s32 	%r<4>;


	mov.f32 	%f1, 0f00000000;
	st.global.v4.f32 	[current_prd], {%f1, %f1, %f1, %f1};
	st.global.v2.f32 	[current_prd+16], {%f1, %f1};
	mov.u32 	%r1, 0;
	st.global.u32 	[current_prd+24], %r1;
	st.global.u32 	[current_prd+36], %r1;
	st.global.u32 	[current_prd+32], %r1;
	st.global.u32 	[current_prd+28], %r1;
	mov.u32 	%r2, 1817103247;
	st.global.u32 	[current_prd+40], %r2;
	st.global.u32 	[current_prd+44], %r1;
	mov.u32 	%r3, 1;
	st.global.u32 	[current_prd+108], %r3;
	ret;
}

	// .globl	_Z16chrome_ah_shadowv
.visible .entry _Z16chrome_ah_shadowv(

)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 0;
	st.global.u32 	[prd_radiance+92], %r1;
	st.global.u32 	[prd_radiance+88], %r1;
	st.global.u32 	[prd_radiance+84], %r1;
	ret;
}

	// .globl	_Z11envmap_missv
.visible .entry _Z11envmap_missv(

)
{
	.reg .pred 	%p<13>;
	.reg .f32 	%f<89>;
	.reg .s32 	%r<15>;
	.reg .s64 	%rd<12>;


	mov.u64 	%rd1, ray;
	add.s64 	%rd2, %rd1, 12;
	ldu.global.f32 	%f10, [%rd2];
	add.s64 	%rd3, %rd1, 20;
	ldu.global.f32 	%f11, [%rd3];
	abs.ftz.f32 	%f1, %f11;
	abs.ftz.f32 	%f2, %f10;
	setp.eq.ftz.f32	%p1, %f1, 0f00000000;
	setp.eq.ftz.f32	%p2, %f2, 0f00000000;
	and.pred  	%p3, %p1, %p2;
	mov.b32 	 %r1, %f11;
	mov.b32 	 %r3, %f10;
	and.b32  	%r2, %r3, -2147483648;
	@%p3 bra 	BB16_4;
	bra.uni 	BB16_1;

BB16_4:
	shr.s32 	%r10, %r1, 31;
	and.b32  	%r11, %r10, 1078530011;
	or.b32  	%r12, %r11, %r2;
	mov.b32 	 %f87, %r12;
	bra.uni 	BB16_5;

BB16_1:
	setp.eq.ftz.f32	%p4, %f1, 0f7F800000;
	setp.eq.ftz.f32	%p5, %f2, 0f7F800000;
	and.pred  	%p6, %p4, %p5;
	@%p6 bra 	BB16_3;
	bra.uni 	BB16_2;

BB16_3:
	shr.s32 	%r6, %r1, 31;
	and.b32  	%r7, %r6, 13483017;
	add.s32 	%r8, %r7, 1061752795;
	or.b32  	%r9, %r8, %r2;
	mov.b32 	 %f87, %r9;
	bra.uni 	BB16_5;

BB16_2:
	max.ftz.f32 	%f12, %f2, %f1;
	min.ftz.f32 	%f13, %f2, %f1;
	div.full.ftz.f32 	%f14, %f13, %f12;
	mul.rn.ftz.f32 	%f15, %f14, %f14;
	mov.f32 	%f16, 0fC0B59883;
	mov.f32 	%f17, 0fBF52C7EA;
	fma.rn.ftz.f32 	%f18, %f15, %f17, %f16;
	mov.f32 	%f19, 0fC0D21907;
	fma.rn.ftz.f32 	%f20, %f18, %f15, %f19;
	mul.ftz.f32 	%f21, %f15, %f20;
	mul.ftz.f32 	%f22, %f14, %f21;
	add.ftz.f32 	%f23, %f15, 0f41355DC0;
	mov.f32 	%f24, 0f41E6BD60;
	fma.rn.ftz.f32 	%f25, %f23, %f15, %f24;
	mov.f32 	%f26, 0f419D92C8;
	fma.rn.ftz.f32 	%f27, %f25, %f15, %f26;
	rcp.approx.ftz.f32 	%f28, %f27;
	fma.rn.ftz.f32 	%f29, %f22, %f28, %f14;
	mov.f32 	%f30, 0f3FC90FDB;
	sub.ftz.f32 	%f31, %f30, %f29;
	setp.gt.ftz.f32	%p7, %f2, %f1;
	selp.f32	%f32, %f31, %f29, %p7;
	mov.f32 	%f33, 0f40490FDB;
	sub.ftz.f32 	%f34, %f33, %f32;
	setp.lt.s32	%p8, %r1, 0;
	selp.f32	%f35, %f34, %f32, %p8;
	mov.b32 	 %r4, %f35;
	or.b32  	%r5, %r4, %r2;
	mov.b32 	 %f36, %r5;
	add.ftz.f32 	%f37, %f1, %f2;
	setp.gtu.ftz.f32	%p9, %f37, 0f7F800000;
	selp.f32	%f87, %f37, %f36, %p9;

BB16_5:
	mov.u64 	%rd4, current_prd;
	mov.u32 	%r13, 1;
	st.global.u32 	[current_prd+108], %r13;
	add.s64 	%rd5, %rd4, 100;
	ldu.global.u32 	%r14, [%rd5];
	setp.gt.s32	%p10, %r14, 0;
	@%p10 bra 	BB16_7;
	bra.uni 	BB16_6;

BB16_7:
	add.s64 	%rd10, %rd1, 16;
	ldu.global.f32 	%f40, [%rd10];
	abs.ftz.f32 	%f41, %f40;
	mov.f32 	%f42, 0f3F800000;
	sub.ftz.f32 	%f43, %f42, %f41;
	mul.ftz.f32 	%f44, %f43, 0f3F000000;
	sqrt.approx.ftz.f32 	%f45, %f44;
	setp.gt.ftz.f32	%p11, %f41, 0f3F11EB85;
	selp.f32	%f46, %f45, %f41, %p11;
	mul.ftz.f32 	%f47, %f46, %f46;
	mov.f32 	%f48, 0f3C94D2E9;
	mov.f32 	%f49, 0f3D53F941;
	fma.rn.ftz.f32 	%f50, %f49, %f47, %f48;
	mov.f32 	%f51, 0f3D3F841F;
	fma.rn.ftz.f32 	%f52, %f50, %f47, %f51;
	mov.f32 	%f53, 0f3D994929;
	fma.rn.ftz.f32 	%f54, %f52, %f47, %f53;
	mov.f32 	%f55, 0f3E2AAB94;
	fma.rn.ftz.f32 	%f56, %f54, %f47, %f55;
	mul.ftz.f32 	%f57, %f47, %f56;
	fma.rn.ftz.f32 	%f58, %f57, %f46, %f46;
	add.ftz.f32 	%f59, %f58, %f58;
	mov.f32 	%f60, 0f3FC90FDB;
	sub.ftz.f32 	%f61, %f60, %f58;
	selp.f32	%f62, %f59, %f61, %p11;
	setp.lt.ftz.f32	%p12, %f40, 0f00000000;
	mov.f32 	%f63, 0f40490FDB;
	sub.ftz.f32 	%f64, %f63, %f62;
	selp.f32	%f65, %f64, %f62, %p12;
	sub.ftz.f32 	%f66, %f60, %f65;
	sin.approx.ftz.f32 	%f67, %f66;
	add.ftz.f32 	%f68, %f67, 0f3F800000;
	mul.ftz.f32 	%f69, %f68, 0f3F000000;
	add.ftz.f32 	%f70, %f87, 0f40490FDB;
	mul.ftz.f32 	%f71, %f70, 0f3E22F983;
	tex.2d.v4.f32.f32	{%f72, %f73, %f74, %f75}, [envmap, {%f71, %f69}];
	ld.global.v4.f32 	{%f76, %f77, %f78, %f79}, [current_prd];
	add.ftz.f32 	%f81, %f73, %f77;
	add.ftz.f32 	%f83, %f76, %f72;
	st.global.v2.f32 	[current_prd], {%f83, %f81};
	add.ftz.f32 	%f88, %f74, %f78;
	bra.uni 	BB16_8;

BB16_6:
	mov.u64 	%rd6, bg_color;
	add.s64 	%rd7, %rd6, 4;
	add.s64 	%rd8, %rd6, 8;
	ldu.global.f32 	%f88, [%rd8];
	ldu.global.f32 	%f38, [%rd7];
	ldu.global.f32 	%f39, [bg_color];
	st.global.v2.f32 	[current_prd], {%f39, %f38};

BB16_8:
	mov.f32 	%f85, 0f00000000;
	st.global.v2.f32 	[current_prd+8], {%f88, %f85};
	st.global.v2.f32 	[current_prd+16], {%f85, %f85};
	st.global.v2.f32 	[current_prd+24], {%f85, %f85};
	st.global.v2.f32 	[current_prd+32], {%f85, %f85};
	mov.f32 	%f86, 0f6C4ECB8F;
	st.global.v2.f32 	[current_prd+40], {%f86, %f85};
	ret;
}

	// .globl	_ZN5optix3RayC1Ev
.visible .func _ZN5optix3RayC1Ev(
	.param .b64 _ZN5optix3RayC1Ev_param_0
)
{



	ret;
}

	// .globl	_ZN5optix3RayC2Ev
.visible .func _ZN5optix3RayC2Ev(
	.param .b64 _ZN5optix3RayC2Ev_param_0
)
{



	ret;
}

	// .globl	_ZN5optix6MatrixILj4ELj4EEC2Ev
.visible .func _ZN5optix6MatrixILj4ELj4EEC2Ev(
	.param .b64 _ZN5optix6MatrixILj4ELj4EEC2Ev_param_0
)
{



	ret;
}

	// .globl	_ZN5optix22boundCallableProgramIdIF6float26float3ifEEC2Ev
.visible .func _ZN5optix22boundCallableProgramIdIF6float26float3ifEEC2Ev(
	.param .b64 _ZN5optix22boundCallableProgramIdIF6float26float3ifEEC2Ev_param_0
)
{



	ret;
}

	// .globl	_ZN28rti_internal_callableprogram21callableProgramIdBaseI6float26float3ifNS_9CPArgVoidES3_S3_S3_S3_S3_S3_EC2Ev
.visible .func _ZN28rti_internal_callableprogram21callableProgramIdBaseI6float26float3ifNS_9CPArgVoidES3_S3_S3_S3_S3_S3_EC2Ev(
	.param .b64 _ZN28rti_internal_callableprogram21callableProgramIdBaseI6float26float3ifNS_9CPArgVoidES3_S3_S3_S3_S3_S3_EC2Ev_param_0
)
{



	ret;
}


