//
// Generated by NVIDIA NVVM Compiler
// Compiler built on Fri Aug  1 03:29:38 2014 (1406860178)
// Cuda compilation tools, release 6.5, V6.5.14
//

.version 4.1
.target sm_20
.address_size 64

.extern .func  (.param .b32 func_retval0) distancehit_hook
(
	.param .align 4 .b8 distancehit_hook_param_0[12]
)
;
.global .align 4 .b8 eye[12];
.global .align 16 .b8 c4[16];
.global .align 4 .f32 alpha;
.global .align 4 .f32 delta;
.global .align 4 .f32 DEL;
.global .align 4 .f32 color_t;
.global .align 4 .u32 max_iterations;
.global .align 4 .b8 particle[12];
.global .align 4 .b8 center[12];
.global .align 4 .f32 global_t;
.global .align 4 .b8 ray[36];
.global .align 8 .b8 normal[12];
.global .align 4 .b8 shading_normal[12];
.global .align 4 .b8 shading_normal2[12];
.global .align 8 .b8 top_object[4];
.global .align 4 .f32 isect_t;
.global .align 8 .b8 prd_radiance[52];
.global .align 8 .b8 prd_shadow[12];
.global .texref envmap;
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 4 .b8 _ZN21rti_internal_typeinfo3eyeE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo2c4E[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo5alphaE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo5deltaE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3DELE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7color_tE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14max_iterationsE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8particleE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6centerE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8global_tE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3rayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14shading_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo15shading_normal2E[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10top_objectE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7isect_tE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12prd_radianceE[8] = {82, 97, 121, 0, 52, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10prd_shadowE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3eyeE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename2c4E[7] = {102, 108, 111, 97, 116, 52, 0};
.global .align 1 .b8 _ZN21rti_internal_typename5alphaE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename5deltaE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3DELE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename7color_tE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14max_iterationsE[5] = {117, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename8particleE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename6centerE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename8global_tE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3rayE[11] = {111, 112, 116, 105, 120, 58, 58, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14shading_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename15shading_normal2E[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10top_objectE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename7isect_tE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12prd_radianceE[20] = {80, 101, 114, 82, 97, 121, 68, 97, 116, 97, 95, 114, 97, 100, 105, 97, 110, 99, 101, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10prd_shadowE[18] = {80, 101, 114, 82, 97, 121, 68, 97, 116, 97, 95, 115, 104, 97, 100, 111, 119, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum3eyeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum2c4E = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum5alphaE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum5deltaE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3DELE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7color_tE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14max_iterationsE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8particleE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6centerE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8global_tE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3rayE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14shading_normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum15shading_normal2E = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10top_objectE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7isect_tE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12prd_radianceE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10prd_shadowE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic3eyeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic2c4E[1];
.global .align 1 .b8 _ZN21rti_internal_semantic5alphaE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic5deltaE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic3DELE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7color_tE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14max_iterationsE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8particleE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic6centerE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8global_tE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic3rayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic14shading_normalE[25] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 115, 104, 97, 100, 105, 110, 103, 95, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic15shading_normal2E[26] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 115, 104, 97, 100, 105, 110, 103, 95, 110, 111, 114, 109, 97, 108, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic10top_objectE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7isect_tE[23] = {114, 116, 73, 110, 116, 101, 114, 115, 101, 99, 116, 105, 111, 110, 68, 105, 115, 116, 97, 110, 99, 101, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic12prd_radianceE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic10prd_shadowE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN23rti_internal_annotation3eyeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation2c4E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation5alphaE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation5deltaE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3DELE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7color_tE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14max_iterationsE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8particleE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6centerE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8global_tE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3rayE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14shading_normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation15shading_normal2E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10top_objectE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7isect_tE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12prd_radianceE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10prd_shadowE[1];

.visible .func  (.param .align 4 .b8 func_retval0[12]) shade_hook(
	.param .align 4 .b8 shade_hook_param_0[12],
	.param .align 4 .b8 shade_hook_param_1[12],
	.param .b32 shade_hook_param_2
)
{
	.reg .f32 	%f<3>;


	mov.f32 	%f1, 0f3F800000;
	st.param.f32	[func_retval0+0], %f1;
	mov.f32 	%f2, 0f00000000;
	st.param.f32	[func_retval0+4], %f2;
	st.param.f32	[func_retval0+8], %f2;
	ret;
}

.visible .func  (.param .b32 func_retval0) _Z5udBox6float3S_(
	.param .align 4 .b8 _Z5udBox6float3S__param_0[12],
	.param .align 4 .b8 _Z5udBox6float3S__param_1[12]
)
{
	.reg .f32 	%f<20>;
	.reg .f64 	%fd<8>;


	ld.param.f32 	%f1, [_Z5udBox6float3S__param_0+8];
	ld.param.f32 	%f2, [_Z5udBox6float3S__param_0+4];
	ld.param.f32 	%f3, [_Z5udBox6float3S__param_0];
	ld.param.f32 	%f4, [_Z5udBox6float3S__param_1+8];
	ld.param.f32 	%f5, [_Z5udBox6float3S__param_1+4];
	ld.param.f32 	%f6, [_Z5udBox6float3S__param_1];
	abs.ftz.f32 	%f7, %f3;
	sub.ftz.f32 	%f8, %f7, %f6;
	cvt.ftz.f64.f32	%fd1, %f8;
	mov.f64 	%fd2, 0d0000000000000000;
	max.f64 	%fd3, %fd1, %fd2;
	cvt.rn.ftz.f32.f64	%f9, %fd3;
	abs.ftz.f32 	%f10, %f2;
	sub.ftz.f32 	%f11, %f10, %f5;
	cvt.ftz.f64.f32	%fd4, %f11;
	max.f64 	%fd5, %fd4, %fd2;
	cvt.rn.ftz.f32.f64	%f12, %fd5;
	abs.ftz.f32 	%f13, %f1;
	sub.ftz.f32 	%f14, %f13, %f4;
	cvt.ftz.f64.f32	%fd6, %f14;
	max.f64 	%fd7, %fd6, %fd2;
	cvt.rn.ftz.f32.f64	%f15, %fd7;
	mul.ftz.f32 	%f16, %f12, %f12;
	fma.rn.ftz.f32 	%f17, %f9, %f9, %f16;
	fma.rn.ftz.f32 	%f18, %f15, %f15, %f17;
	sqrt.approx.ftz.f32 	%f19, %f18;
	st.param.f32	[func_retval0+0], %f19;
	ret;
}

.visible .func  (.param .b32 func_retval0) _Z5sdBox6float3S_(
	.param .align 4 .b8 _Z5sdBox6float3S__param_0[12],
	.param .align 4 .b8 _Z5sdBox6float3S__param_1[12]
)
{
	.reg .f32 	%f<26>;
	.reg .f64 	%fd<18>;


	ld.param.f32 	%f1, [_Z5sdBox6float3S__param_0+8];
	ld.param.f32 	%f2, [_Z5sdBox6float3S__param_0+4];
	ld.param.f32 	%f3, [_Z5sdBox6float3S__param_0];
	ld.param.f32 	%f4, [_Z5sdBox6float3S__param_1+8];
	ld.param.f32 	%f5, [_Z5sdBox6float3S__param_1+4];
	ld.param.f32 	%f6, [_Z5sdBox6float3S__param_1];
	abs.ftz.f32 	%f7, %f3;
	sub.ftz.f32 	%f8, %f7, %f6;
	cvt.ftz.f64.f32	%fd1, %f8;
	mov.f64 	%fd2, 0d0000000000000000;
	max.f64 	%fd3, %fd1, %fd2;
	cvt.rn.ftz.f32.f64	%f9, %fd3;
	abs.ftz.f32 	%f10, %f2;
	sub.ftz.f32 	%f11, %f10, %f5;
	cvt.ftz.f64.f32	%fd4, %f11;
	max.f64 	%fd5, %fd4, %fd2;
	cvt.rn.ftz.f32.f64	%f12, %fd5;
	abs.ftz.f32 	%f13, %f1;
	sub.ftz.f32 	%f14, %f13, %f4;
	cvt.ftz.f64.f32	%fd6, %f14;
	max.f64 	%fd7, %fd6, %fd2;
	cvt.rn.ftz.f32.f64	%f15, %fd7;
	max.ftz.f32 	%f16, %f12, %f15;
	max.ftz.f32 	%f17, %f9, %f16;
	cvt.ftz.f64.f32	%fd8, %f17;
	min.f64 	%fd9, %fd8, %fd2;
	cvt.ftz.f64.f32	%fd10, %f9;
	max.f64 	%fd11, %fd10, %fd2;
	cvt.rn.ftz.f32.f64	%f18, %fd11;
	cvt.ftz.f64.f32	%fd12, %f12;
	max.f64 	%fd13, %fd12, %fd2;
	cvt.rn.ftz.f32.f64	%f19, %fd13;
	cvt.ftz.f64.f32	%fd14, %f15;
	max.f64 	%fd15, %fd14, %fd2;
	cvt.rn.ftz.f32.f64	%f20, %fd15;
	mul.ftz.f32 	%f21, %f19, %f19;
	fma.rn.ftz.f32 	%f22, %f18, %f18, %f21;
	fma.rn.ftz.f32 	%f23, %f20, %f20, %f22;
	sqrt.approx.ftz.f32 	%f24, %f23;
	cvt.ftz.f64.f32	%fd16, %f24;
	add.f64 	%fd17, %fd9, %fd16;
	cvt.rn.ftz.f32.f64	%f25, %fd17;
	st.param.f32	[func_retval0+0], %f25;
	ret;
}

.visible .func  (.param .b32 func_retval0) _Z4sminfff(
	.param .b32 _Z4sminfff_param_0,
	.param .b32 _Z4sminfff_param_1,
	.param .b32 _Z4sminfff_param_2
)
{
	.reg .f32 	%f<16>;
	.reg .f64 	%fd<8>;


	ld.param.f32 	%f1, [_Z4sminfff_param_0];
	ld.param.f32 	%f2, [_Z4sminfff_param_1];
	ld.param.f32 	%f3, [_Z4sminfff_param_2];
	sub.ftz.f32 	%f4, %f2, %f1;
	mul.ftz.f32 	%f5, %f4, 0f3F000000;
	div.approx.ftz.f32 	%f6, %f5, %f3;
	add.ftz.f32 	%f7, %f6, 0f3F000000;
	mov.f32 	%f8, 0f3F800000;
	min.ftz.f32 	%f9, %f7, %f8;
	mov.f32 	%f10, 0f00000000;
	max.ftz.f32 	%f11, %f10, %f9;
	sub.ftz.f32 	%f12, %f1, %f2;
	fma.rn.ftz.f32 	%f13, %f11, %f12, %f2;
	cvt.ftz.f64.f32	%fd1, %f13;
	mul.ftz.f32 	%f14, %f11, %f3;
	cvt.ftz.f64.f32	%fd2, %f14;
	cvt.ftz.f64.f32	%fd3, %f11;
	mov.f64 	%fd4, 0d3FF0000000000000;
	sub.f64 	%fd5, %fd4, %fd3;
	mul.f64 	%fd6, %fd2, %fd5;
	sub.f64 	%fd7, %fd1, %fd6;
	cvt.rn.ftz.f32.f64	%f15, %fd7;
	st.param.f32	[func_retval0+0], %f15;
	ret;
}

.visible .entry _Z9intersecti(
	.param .u32 _Z9intersecti_param_0
)
{
	.reg .pred 	%p<14>;
	.reg .s32 	%r<9>;
	.reg .f32 	%f<99>;
	.reg .s64 	%rd<7>;


	mov.u32 	%r8, 0;
	st.global.u32 	[normal+8], %r8;
	mov.f32 	%f97, 0f00000000;
	st.global.v2.f32 	[normal], {%f97, %f97};
	ldu.global.f32 	%f32, [center];
	ldu.global.f32 	%f1, [ray];
	sub.ftz.f32 	%f33, %f1, %f32;
	mov.u64 	%rd1, center;
	add.s64 	%rd2, %rd1, 4;
	ldu.global.f32 	%f34, [%rd2];
	mov.u64 	%rd3, ray;
	add.s64 	%rd4, %rd3, 4;
	ldu.global.f32 	%f2, [%rd4];
	sub.ftz.f32 	%f35, %f2, %f34;
	add.s64 	%rd5, %rd1, 8;
	ldu.global.f32 	%f36, [%rd5];
	add.s64 	%rd6, %rd3, 8;
	ldu.global.f32 	%f3, [%rd6];
	sub.ftz.f32 	%f37, %f3, %f36;
	ld.global.f32 	%f6, [ray+20];
	ld.global.f32 	%f4, [ray+12];
	ld.global.f32 	%f5, [ray+16];
	mul.ftz.f32 	%f38, %f35, %f5;
	fma.rn.ftz.f32 	%f39, %f33, %f4, %f38;
	fma.rn.ftz.f32 	%f7, %f37, %f6, %f39;
	mul.ftz.f32 	%f40, %f35, %f35;
	fma.rn.ftz.f32 	%f41, %f33, %f33, %f40;
	fma.rn.ftz.f32 	%f42, %f37, %f37, %f41;
	add.ftz.f32 	%f43, %f42, 0fC0800000;
	mul.ftz.f32 	%f44, %f7, %f7;
	sub.ftz.f32 	%f8, %f44, %f43;
	setp.gt.ftz.f32	%p2, %f8, 0f00000000;
	@%p2 bra 	BB4_2;

	mov.pred 	%p3, 0;
	mov.f32 	%f46, 0f00000000;
	mov.f32 	%f98, %f46;
	mov.f32 	%f96, %f46;
	@!%p3 bra 	BB4_9;
	bra.uni 	BB4_3;

BB4_2:
	sqrt.approx.ftz.f32 	%f47, %f8;
	neg.ftz.f32 	%f48, %f7;
	sub.ftz.f32 	%f9, %f48, %f47;
	sub.ftz.f32 	%f49, %f47, %f7;
	setp.gt.ftz.f32	%p5, %f9, %f49;
	selp.f32	%f98, %f9, %f49, %p5;
	mov.pred 	%p4, -1;
	mov.f32 	%f96, %f9;
	@!%p4 bra 	BB4_9;
	bra.uni 	BB4_3;

BB4_3:
	fma.rn.ftz.f32 	%f93, %f4, %f96, %f1;
	fma.rn.ftz.f32 	%f94, %f5, %f96, %f2;
	fma.rn.ftz.f32 	%f95, %f6, %f96, %f3;

BB4_4:
	setp.gt.s32	%p6, %r8, 799;
	@%p6 bra 	BB4_6;

	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	.param .align 4 .b8 param0[12];
	st.param.f32	[param0+0], %f93;
	st.param.f32	[param0+4], %f94;
	st.param.f32	[param0+8], %f95;
	.param .b32 retval0;
	call.uni (retval0), 
	distancehit_hook, 
	(
	param0
	);
	ld.param.f32	%f97, [retval0+0];
	}
	// Callseq End 0
	fma.rn.ftz.f32 	%f93, %f4, %f97, %f93;
	fma.rn.ftz.f32 	%f94, %f5, %f97, %f94;
	fma.rn.ftz.f32 	%f95, %f6, %f97, %f95;
	add.ftz.f32 	%f96, %f96, %f97;
	setp.lt.ftz.f32	%p7, %f97, 0f3A83126F;
	setp.gt.ftz.f32	%p8, %f96, %f98;
	or.pred  	%p9, %p7, %p8;
	add.s32 	%r8, %r8, 1;
	@!%p9 bra 	BB4_4;
	bra.uni 	BB4_6;

BB4_6:
	setp.geu.ftz.f32	%p10, %f97, 0f3A83126F;
	@%p10 bra 	BB4_9;

	// inline asm
	call (%r5), _rt_potential_intersection, (%f96);
	// inline asm
	setp.eq.s32	%p11, %r5, 0;
	@%p11 bra 	BB4_9;

	ld.global.f32 	%f52, [DEL];
	add.ftz.f32 	%f53, %f93, %f52;
	add.ftz.f32 	%f54, %f94, 0f00000000;
	add.ftz.f32 	%f55, %f95, 0f00000000;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	.param .align 4 .b8 param0[12];
	st.param.f32	[param0+0], %f53;
	st.param.f32	[param0+4], %f54;
	st.param.f32	[param0+8], %f55;
	.param .b32 retval0;
	call.uni (retval0), 
	distancehit_hook, 
	(
	param0
	);
	ld.param.f32	%f56, [retval0+0];
	}
	// Callseq End 1
	mov.u32 	%r7, 0;
	ld.global.f32 	%f57, [DEL];
	sub.ftz.f32 	%f58, %f93, %f57;
	add.ftz.f32 	%f59, %f94, 0f80000000;
	add.ftz.f32 	%f60, %f95, 0f80000000;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	.param .align 4 .b8 param0[12];
	st.param.f32	[param0+0], %f58;
	st.param.f32	[param0+4], %f59;
	st.param.f32	[param0+8], %f60;
	.param .b32 retval0;
	call.uni (retval0), 
	distancehit_hook, 
	(
	param0
	);
	ld.param.f32	%f61, [retval0+0];
	}
	// Callseq End 2
	sub.ftz.f32 	%f62, %f56, %f61;
	ld.global.f32 	%f63, [DEL];
	add.ftz.f32 	%f64, %f94, %f63;
	add.ftz.f32 	%f65, %f93, 0f00000000;
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	.param .align 4 .b8 param0[12];
	st.param.f32	[param0+0], %f65;
	st.param.f32	[param0+4], %f64;
	st.param.f32	[param0+8], %f55;
	.param .b32 retval0;
	call.uni (retval0), 
	distancehit_hook, 
	(
	param0
	);
	ld.param.f32	%f66, [retval0+0];
	}
	// Callseq End 3
	ld.global.f32 	%f67, [DEL];
	sub.ftz.f32 	%f68, %f94, %f67;
	add.ftz.f32 	%f69, %f93, 0f80000000;
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	.param .align 4 .b8 param0[12];
	st.param.f32	[param0+0], %f69;
	st.param.f32	[param0+4], %f68;
	st.param.f32	[param0+8], %f60;
	.param .b32 retval0;
	call.uni (retval0), 
	distancehit_hook, 
	(
	param0
	);
	ld.param.f32	%f70, [retval0+0];
	}
	// Callseq End 4
	sub.ftz.f32 	%f71, %f66, %f70;
	ld.global.f32 	%f72, [DEL];
	add.ftz.f32 	%f73, %f95, %f72;
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	.param .align 4 .b8 param0[12];
	st.param.f32	[param0+0], %f65;
	st.param.f32	[param0+4], %f54;
	st.param.f32	[param0+8], %f73;
	.param .b32 retval0;
	call.uni (retval0), 
	distancehit_hook, 
	(
	param0
	);
	ld.param.f32	%f74, [retval0+0];
	}
	// Callseq End 5
	ld.global.f32 	%f75, [DEL];
	sub.ftz.f32 	%f76, %f95, %f75;
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	.param .align 4 .b8 param0[12];
	st.param.f32	[param0+0], %f69;
	st.param.f32	[param0+4], %f59;
	st.param.f32	[param0+8], %f76;
	.param .b32 retval0;
	call.uni (retval0), 
	distancehit_hook, 
	(
	param0
	);
	ld.param.f32	%f77, [retval0+0];
	}
	// Callseq End 6
	sub.ftz.f32 	%f78, %f74, %f77;
	mul.ftz.f32 	%f79, %f71, %f71;
	fma.rn.ftz.f32 	%f80, %f62, %f62, %f79;
	fma.rn.ftz.f32 	%f81, %f78, %f78, %f80;
	sqrt.approx.ftz.f32 	%f82, %f81;
	rcp.approx.ftz.f32 	%f83, %f82;
	mul.ftz.f32 	%f84, %f78, %f83;
	mul.ftz.f32 	%f85, %f71, %f83;
	mul.ftz.f32 	%f86, %f62, %f83;
	st.global.v2.f32 	[normal], {%f86, %f85};
	st.global.f32 	[normal+8], %f84;
	// inline asm
	call (%r6), _rt_report_intersection, (%r7);
	// inline asm

BB4_9:
	ret;
}

.visible .entry _Z6boundsiPf(
	.param .u32 _Z6boundsiPf_param_0,
	.param .u64 _Z6boundsiPf_param_1
)
{
	.reg .s32 	%r<3>;
	.reg .s64 	%rd<3>;


	ld.param.u64 	%rd1, [_Z6boundsiPf_param_1];
	cvta.to.global.u64 	%rd2, %rd1;
	mov.u32 	%r1, -1078774989;
	st.global.u32 	[%rd2], %r1;
	st.global.u32 	[%rd2+8], %r1;
	st.global.u32 	[%rd2+4], %r1;
	mov.u32 	%r2, 1068708659;
	st.global.u32 	[%rd2+12], %r2;
	st.global.u32 	[%rd2+16], %r2;
	st.global.u32 	[%rd2+20], %r2;
	ret;
}

.visible .entry _Z8radiancev(

)
{
	.reg .f32 	%f<110>;
	.reg .s64 	%rd<9>;


	ldu.global.f32 	%f1, [isect_t];
	mov.u64 	%rd1, ray;
	add.s64 	%rd2, %rd1, 12;
	ldu.global.f32 	%f2, [%rd2];
	add.s64 	%rd3, %rd1, 16;
	ldu.global.f32 	%f3, [%rd3];
	add.s64 	%rd4, %rd1, 20;
	ldu.global.f32 	%f4, [%rd4];
	ldu.global.f32 	%f5, [ray];
	add.s64 	%rd5, %rd1, 4;
	ldu.global.f32 	%f6, [%rd5];
	add.s64 	%rd6, %rd1, 8;
	ldu.global.f32 	%f7, [%rd6];
	fma.rn.ftz.f32 	%f8, %f4, %f1, %f7;
	mov.f32 	%f9, 0f00000000;
	ldu.global.v2.f32 	{%f10, %f11}, [normal];
	mov.u64 	%rd7, normal;
	add.s64 	%rd8, %rd7, 8;
	ldu.global.f32 	%f12, [%rd8];
	fma.rn.ftz.f32 	%f13, %f2, %f1, %f5;
	fma.rn.ftz.f32 	%f15, %f10, 0f00000000, %f13;
	fma.rn.ftz.f32 	%f16, %f3, %f1, %f6;
	fma.rn.ftz.f32 	%f18, %f11, 0f00000000, %f16;
	fma.rn.ftz.f32 	%f19, %f12, 0f00000000, %f8;
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	.param .align 4 .b8 param0[12];
	st.param.f32	[param0+0], %f15;
	st.param.f32	[param0+4], %f18;
	st.param.f32	[param0+8], %f19;
	.param .b32 retval0;
	call.uni (retval0), 
	distancehit_hook, 
	(
	param0
	);
	ld.param.f32	%f20, [retval0+0];
	}
	// Callseq End 7
	sub.ftz.f32 	%f21, %f9, %f20;
	fma.rn.ftz.f32 	%f22, %f21, 0fC0E00000, 0f3F800000;
	mov.f32 	%f23, 0f3F800000;
	mov.f32 	%f24, 0f3D4CCCCD;
	ld.global.v2.f32 	{%f25, %f26}, [normal];
	ld.global.f32 	%f27, [normal+8];
	fma.rn.ftz.f32 	%f29, %f25, 0f3D4CCCCD, %f13;
	fma.rn.ftz.f32 	%f31, %f26, 0f3D4CCCCD, %f16;
	fma.rn.ftz.f32 	%f32, %f27, 0f3D4CCCCD, %f8;
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	.param .align 4 .b8 param0[12];
	st.param.f32	[param0+0], %f29;
	st.param.f32	[param0+4], %f31;
	st.param.f32	[param0+8], %f32;
	.param .b32 retval0;
	call.uni (retval0), 
	distancehit_hook, 
	(
	param0
	);
	ld.param.f32	%f33, [retval0+0];
	}
	// Callseq End 8
	sub.ftz.f32 	%f34, %f24, %f33;
	fma.rn.ftz.f32 	%f35, %f34, 0fC0600000, %f22;
	mov.f32 	%f36, 0f3DCCCCCD;
	ld.global.v2.f32 	{%f37, %f38}, [normal];
	ld.global.f32 	%f39, [normal+8];
	fma.rn.ftz.f32 	%f41, %f37, 0f3DCCCCCD, %f13;
	fma.rn.ftz.f32 	%f43, %f38, 0f3DCCCCCD, %f16;
	fma.rn.ftz.f32 	%f44, %f39, 0f3DCCCCCD, %f8;
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	.param .align 4 .b8 param0[12];
	st.param.f32	[param0+0], %f41;
	st.param.f32	[param0+4], %f43;
	st.param.f32	[param0+8], %f44;
	.param .b32 retval0;
	call.uni (retval0), 
	distancehit_hook, 
	(
	param0
	);
	ld.param.f32	%f45, [retval0+0];
	}
	// Callseq End 9
	sub.ftz.f32 	%f46, %f36, %f45;
	fma.rn.ftz.f32 	%f47, %f46, 0fBFE00000, %f35;
	mov.f32 	%f48, 0f3E19999A;
	ld.global.v2.f32 	{%f49, %f50}, [normal];
	ld.global.f32 	%f51, [normal+8];
	fma.rn.ftz.f32 	%f53, %f49, 0f3E19999A, %f13;
	fma.rn.ftz.f32 	%f55, %f50, 0f3E19999A, %f16;
	fma.rn.ftz.f32 	%f56, %f51, 0f3E19999A, %f8;
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	.param .align 4 .b8 param0[12];
	st.param.f32	[param0+0], %f53;
	st.param.f32	[param0+4], %f55;
	st.param.f32	[param0+8], %f56;
	.param .b32 retval0;
	call.uni (retval0), 
	distancehit_hook, 
	(
	param0
	);
	ld.param.f32	%f57, [retval0+0];
	}
	// Callseq End 10
	sub.ftz.f32 	%f58, %f48, %f57;
	fma.rn.ftz.f32 	%f59, %f58, 0fBF600000, %f47;
	add.ftz.f32 	%f60, %f59, 0f3E99999A;
	mov.f32 	%f61, 0f3E99999A;
	mul.ftz.f32 	%f62, %f60, %f60;
	min.ftz.f32 	%f63, %f62, %f23;
	mov.f32 	%f64, 0f3E4CCCCD;
	max.ftz.f32 	%f65, %f64, %f63;
	ld.global.v2.f32 	{%f66, %f67}, [normal];
	abs.ftz.f32 	%f69, %f66;
	fma.rn.ftz.f32 	%f70, %f69, 0f3F000000, 0f3F000000;
	ld.global.f32 	%f71, [normal+8];
	abs.ftz.f32 	%f72, %f71;
	abs.ftz.f32 	%f74, %f67;
	fma.rn.ftz.f32 	%f75, %f74, 0f3F000000, 0f3F000000;
	fma.rn.ftz.f32 	%f76, %f72, 0fBF000000, 0f3F000000;
	fma.rn.ftz.f32 	%f77, %f76, 0f3F333333, 0f3E99999A;
	add.ftz.f32 	%f78, %f70, 0f3E4CCCCD;
	add.ftz.f32 	%f79, %f75, 0f3E4CCCCD;
	mul.ftz.f32 	%f80, %f79, 0f3F666666;
	mul.ftz.f32 	%f81, %f80, %f79;
	mul.ftz.f32 	%f82, %f77, 0f3F800000;
	mul.ftz.f32 	%f83, %f82, %f79;
	mul.ftz.f32 	%f84, %f78, %f81;
	mul.ftz.f32 	%f85, %f79, %f83;
	add.ftz.f32 	%f86, %f77, 0f3E99999A;
	max.ftz.f32 	%f87, %f61, %f65;
	mul.ftz.f32 	%f88, %f86, %f87;
	mov.f32 	%f89, 0f3F19999A;
	max.ftz.f32 	%f90, %f89, %f65;
	mul.ftz.f32 	%f91, %f86, %f90;
	mul.ftz.f32 	%f92, %f85, %f65;
	mul.ftz.f32 	%f93, %f84, %f88;
	st.global.v2.f32 	[prd_radiance], {%f93, %f92};
	st.global.f32 	[prd_radiance+8], %f91;
	ld.global.v2.f32 	{%f94, %f95}, [normal];
	ld.global.f32 	%f97, [normal+8];
	st.global.v2.f32 	[prd_radiance+16], {%f95, %f97};
	st.global.f32 	[prd_radiance+12], %f94;
	st.global.v2.f32 	[prd_radiance+24], {%f13, %f16};
	st.global.f32 	[prd_radiance+32], %f8;
	ld.global.f32 	%f99, [eye];
	sub.ftz.f32 	%f100, %f13, %f99;
	ld.global.f32 	%f101, [eye+4];
	sub.ftz.f32 	%f102, %f16, %f101;
	ld.global.f32 	%f103, [eye+8];
	sub.ftz.f32 	%f104, %f8, %f103;
	mul.ftz.f32 	%f105, %f102, %f102;
	fma.rn.ftz.f32 	%f106, %f100, %f100, %f105;
	fma.rn.ftz.f32 	%f107, %f104, %f104, %f106;
	sqrt.approx.ftz.f32 	%f108, %f107;
	div.full.ftz.f32 	%f109, %f108, 0f42C80000;
	st.global.f32 	[prd_radiance+36], %f109;
	ret;
}

.visible .entry _Z6shadowv(

)
{
	.reg .s32 	%r<2>;
	.reg .f32 	%f<2>;


	mov.u32 	%r1, 0;
	st.global.u32 	[prd_shadow+8], %r1;
	mov.f32 	%f1, 0f00000000;
	st.global.v2.f32 	[prd_shadow], {%f1, %f1};
	// inline asm
	call _rt_terminate_ray, ();
	// inline asm
	ret;
}

.visible .entry _Z18chrome_ch_radiancev(

)
{
	.local .align 8 .b8 	__local_depot8[56];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .s32 	%r<7>;
	.reg .f32 	%f<61>;
	.reg .s64 	%rd<8>;


	mov.u64 	%SPL, __local_depot8;
	cvta.local.u64 	%SP, %SPL;
	ld.global.f32 	%f3, [ray+20];
	ld.global.f32 	%f2, [ray+16];
	ld.global.f32 	%f1, [ray+12];
	mov.u64 	%rd1, prd_radiance;
	add.s64 	%rd2, %rd1, 48;
	ldu.global.u32 	%r1, [%rd2];
	setp.lt.s32	%p1, %r1, 3;
	@%p1 bra 	BB8_2;

	mov.u32 	%r2, 0;
	st.global.u32 	[prd_radiance+8], %r2;
	mov.f32 	%f4, 0f00000000;
	st.global.v2.f32 	[prd_radiance], {%f4, %f4};
	bra.uni 	BB8_3;

BB8_2:
	add.u64 	%rd3, %SP, 0;
	cvta.to.local.u64 	%rd4, %rd3;
	ldu.global.f32 	%f13, [isect_t];
	ld.global.f32 	%f14, [ray];
	fma.rn.ftz.f32 	%f5, %f1, %f13, %f14;
	ld.global.f32 	%f15, [ray+4];
	fma.rn.ftz.f32 	%f6, %f2, %f13, %f15;
	ld.global.f32 	%f16, [ray+8];
	fma.rn.ftz.f32 	%f7, %f3, %f13, %f16;
	ld.global.f32 	%f17, [prd_radiance+40];
	st.local.f32 	[%rd4+40], %f17;
	add.s32 	%r6, %r1, 1;
	st.local.u32 	[%rd4+48], %r6;
	ldu.global.f32 	%f18, [shading_normal];
	add.ftz.f32 	%f19, %f18, %f18;
	mov.u64 	%rd5, shading_normal;
	add.s64 	%rd6, %rd5, 4;
	ldu.global.f32 	%f20, [%rd6];
	add.ftz.f32 	%f21, %f20, %f20;
	add.s64 	%rd7, %rd5, 8;
	ldu.global.f32 	%f22, [%rd7];
	add.ftz.f32 	%f23, %f22, %f22;
	mul.ftz.f32 	%f24, %f20, %f2;
	fma.rn.ftz.f32 	%f25, %f18, %f1, %f24;
	fma.rn.ftz.f32 	%f26, %f22, %f3, %f25;
	mul.ftz.f32 	%f27, %f19, %f26;
	mul.ftz.f32 	%f28, %f21, %f26;
	mul.ftz.f32 	%f29, %f23, %f26;
	sub.ftz.f32 	%f8, %f1, %f27;
	sub.ftz.f32 	%f9, %f2, %f28;
	sub.ftz.f32 	%f10, %f3, %f29;
	ldu.global.u32 	%r3, [top_object];
	mov.u32 	%r4, 0;
	mov.f32 	%f11, 0f3A83126F;
	mov.f32 	%f12, 0f6C4ECB8F;
	mov.u32 	%r5, 52;
	// inline asm
	call _rt_trace_64, (%r3, %f5, %f6, %f7, %f8, %f9, %f10, %r4, %f11, %f12, %rd3, %r5);
	// inline asm
	ld.global.f32 	%f30, [shading_normal];
	neg.ftz.f32 	%f31, %f1;
	mul.ftz.f32 	%f32, %f30, %f31;
	ld.global.f32 	%f33, [shading_normal+4];
	mul.ftz.f32 	%f34, %f33, %f2;
	sub.ftz.f32 	%f35, %f32, %f34;
	ld.global.f32 	%f36, [shading_normal+8];
	mul.ftz.f32 	%f37, %f36, %f3;
	sub.ftz.f32 	%f38, %f35, %f37;
	mov.f32 	%f39, 0f3F800000;
	sub.ftz.f32 	%f40, %f39, %f38;
	mov.f32 	%f41, 0f00000000;
	max.ftz.f32 	%f42, %f41, %f40;
	lg2.approx.ftz.f32 	%f43, %f42;
	mul.ftz.f32 	%f44, %f43, 0f40A00000;
	ex2.approx.ftz.f32 	%f45, %f44;
	fma.rn.ftz.f32 	%f46, %f45, 0f3F333333, 0f3E99999A;
	mov.f32 	%f47, 0f3E99999A;
	min.ftz.f32 	%f48, %f46, %f39;
	max.ftz.f32 	%f49, %f47, %f48;
	add.ftz.f32 	%f50, %f33, 0f3F800000;
	mul.ftz.f32 	%f51, %f50, 0f3F000000;
	ld.local.f32 	%f52, [%rd4];
	ld.local.f32 	%f53, [%rd4+4];
	ld.local.f32 	%f54, [%rd4+8];
	mul.ftz.f32 	%f55, %f51, %f51;
	mul.ftz.f32 	%f56, %f55, %f51;
	mul.ftz.f32 	%f57, %f56, 0f3DCCCCCD;
	fma.rn.ftz.f32 	%f58, %f54, %f49, %f57;
	fma.rn.ftz.f32 	%f59, %f53, %f49, %f57;
	fma.rn.ftz.f32 	%f60, %f52, %f49, %f57;
	st.global.v2.f32 	[prd_radiance], {%f60, %f59};
	st.global.f32 	[prd_radiance+8], %f58;

BB8_3:
	ret;
}

.visible .entry _Z16chrome_ah_shadowv(

)
{
	.reg .s32 	%r<2>;
	.reg .f32 	%f<2>;


	mov.u32 	%r1, 0;
	st.global.u32 	[prd_shadow+8], %r1;
	mov.f32 	%f1, 0f00000000;
	st.global.v2.f32 	[prd_shadow], {%f1, %f1};
	// inline asm
	call _rt_terminate_ray, ();
	// inline asm
	ret;
}

.visible .entry _Z11envmap_missv(

)
{
	.reg .pred 	%p<12>;
	.reg .s32 	%r<13>;
	.reg .f32 	%f<72>;
	.reg .s64 	%rd<7>;


	mov.u64 	%rd1, ray;
	add.s64 	%rd2, %rd1, 12;
	ldu.global.f32 	%f7, [%rd2];
	add.s64 	%rd3, %rd1, 20;
	ldu.global.f32 	%f8, [%rd3];
	abs.ftz.f32 	%f1, %f8;
	abs.ftz.f32 	%f2, %f7;
	setp.eq.ftz.f32	%p1, %f1, 0f00000000;
	setp.eq.ftz.f32	%p2, %f2, 0f00000000;
	and.pred  	%p3, %p1, %p2;
	mov.b32 	 %r1, %f8;
	mov.b32 	 %r3, %f7;
	and.b32  	%r2, %r3, -2147483648;
	@%p3 bra 	BB10_4;

	setp.eq.ftz.f32	%p4, %f1, 0f7F800000;
	setp.eq.ftz.f32	%p5, %f2, 0f7F800000;
	and.pred  	%p6, %p4, %p5;
	@%p6 bra 	BB10_3;

	max.ftz.f32 	%f9, %f2, %f1;
	min.ftz.f32 	%f10, %f2, %f1;
	div.full.ftz.f32 	%f11, %f10, %f9;
	mul.rn.ftz.f32 	%f12, %f11, %f11;
	mov.f32 	%f13, 0fC0B59883;
	mov.f32 	%f14, 0fBF52C7EA;
	fma.rn.ftz.f32 	%f15, %f12, %f14, %f13;
	mov.f32 	%f16, 0fC0D21907;
	fma.rn.ftz.f32 	%f17, %f15, %f12, %f16;
	mul.ftz.f32 	%f18, %f17, %f12;
	mul.ftz.f32 	%f19, %f18, %f11;
	add.ftz.f32 	%f20, %f12, 0f41355DC0;
	mov.f32 	%f21, 0f41E6BD60;
	fma.rn.ftz.f32 	%f22, %f20, %f12, %f21;
	mov.f32 	%f23, 0f419D92C8;
	fma.rn.ftz.f32 	%f24, %f22, %f12, %f23;
	rcp.approx.ftz.f32 	%f25, %f24;
	fma.rn.ftz.f32 	%f26, %f19, %f25, %f11;
	mov.f32 	%f27, 0f3FC90FDB;
	sub.ftz.f32 	%f28, %f27, %f26;
	setp.gt.ftz.f32	%p7, %f2, %f1;
	selp.f32	%f29, %f28, %f26, %p7;
	mov.f32 	%f30, 0f40490FDB;
	sub.ftz.f32 	%f31, %f30, %f29;
	setp.lt.s32	%p8, %r1, 0;
	selp.f32	%f32, %f31, %f29, %p8;
	mov.b32 	 %r4, %f32;
	or.b32  	%r5, %r4, %r2;
	mov.b32 	 %f33, %r5;
	add.ftz.f32 	%f34, %f1, %f2;
	setp.gtu.ftz.f32	%p9, %f34, 0f7F800000;
	selp.f32	%f71, %f34, %f33, %p9;
	bra.uni 	BB10_5;

BB10_3:
	shr.s32 	%r6, %r1, 31;
	and.b32  	%r7, %r6, 13483017;
	add.s32 	%r8, %r7, 1061752795;
	or.b32  	%r9, %r8, %r2;
	mov.b32 	 %f71, %r9;
	bra.uni 	BB10_5;

BB10_4:
	shr.s32 	%r10, %r1, 31;
	and.b32  	%r11, %r10, 1078530011;
	or.b32  	%r12, %r11, %r2;
	mov.b32 	 %f71, %r12;

BB10_5:
	add.s64 	%rd6, %rd1, 16;
	ldu.global.f32 	%f41, [%rd6];
	abs.ftz.f32 	%f42, %f41;
	mov.f32 	%f43, 0f3F800000;
	sub.ftz.f32 	%f44, %f43, %f42;
	mul.ftz.f32 	%f45, %f44, 0f3F000000;
	sqrt.approx.ftz.f32 	%f46, %f45;
	setp.gt.ftz.f32	%p10, %f42, 0f3F11EB85;
	selp.f32	%f47, %f46, %f42, %p10;
	mul.ftz.f32 	%f48, %f47, %f47;
	mov.f32 	%f49, 0f3C94D2E9;
	mov.f32 	%f50, 0f3D53F941;
	fma.rn.ftz.f32 	%f51, %f50, %f48, %f49;
	mov.f32 	%f52, 0f3D3F841F;
	fma.rn.ftz.f32 	%f53, %f51, %f48, %f52;
	mov.f32 	%f54, 0f3D994929;
	fma.rn.ftz.f32 	%f55, %f53, %f48, %f54;
	mov.f32 	%f56, 0f3E2AAB94;
	fma.rn.ftz.f32 	%f57, %f55, %f48, %f56;
	mul.ftz.f32 	%f58, %f57, %f48;
	fma.rn.ftz.f32 	%f59, %f58, %f47, %f47;
	add.ftz.f32 	%f60, %f59, %f59;
	mov.f32 	%f61, 0f3FC90FDB;
	sub.ftz.f32 	%f62, %f61, %f59;
	selp.f32	%f63, %f60, %f62, %p10;
	setp.lt.ftz.f32	%p11, %f41, 0f00000000;
	mov.f32 	%f64, 0f40490FDB;
	sub.ftz.f32 	%f65, %f64, %f63;
	selp.f32	%f66, %f65, %f63, %p11;
	sub.ftz.f32 	%f67, %f61, %f66;
	add.ftz.f32 	%f68, %f71, 0f40490FDB;
	mul.ftz.f32 	%f39, %f68, 0f3E22F983;
	sin.approx.ftz.f32 	%f69, %f67;
	add.ftz.f32 	%f70, %f69, 0f3F800000;
	mul.ftz.f32 	%f40, %f70, 0f3F000000;
	// inline asm
	tex.2d.v4.f32.f32 {%f35, %f36, %f37, %f38}, [envmap, {%f39, %f40}];
	// inline asm
	st.global.v2.f32 	[prd_radiance], {%f35, %f36};
	st.global.f32 	[prd_radiance+8], %f37;
	ret;
}

.visible .func _ZN5optix3RayC1Ev(
	.param .b64 _ZN5optix3RayC1Ev_param_0
)
{



	ret;
}

.visible .func _ZN5optix3RayC2Ev(
	.param .b64 _ZN5optix3RayC2Ev_param_0
)
{



	ret;
}


